import {mewRequest} from "../request";
import {AxiosInstance} from "axios";
import {Mc} from "../main";
import {AppSendDingTalkMessage} from "../ms/mc";

export interface DingTalkAuthData {
    expireIn: number
    accessToken: string
}

export interface SendDataProperty {
    username: string
    workorder: string
    time: string
}

// const appId = '5000000002334316' // 钉钉企业第三方应用-智能配发柜

export class DingTalk {
    _appId: string
    _service: AxiosInstance
    _access_token: string = ''
    _isDebugMode: boolean
    constructor(appId: string, service: AxiosInstance, isDebugMode: boolean = false) {
        this._appId = appId
        this._service = service
        this._isDebugMode = isDebugMode
        this.init()
    }

    // 初始化
    private async init() {
        const mc = Mc(this._service,this._isDebugMode)
        // get app info
        const res = await mc.getAccessToken(this._appId)
        // console.log(71, res)
        this._access_token = res.data.accessToken
    }

    private async getMsAccessToken() {
        const json = {username: 'admin', password: '111111'}
        const res = await mewRequest('/auth', json, 'POST', this._service,this._isDebugMode)
        return res.access_token
    }
    private async getDingTalkUserinfo(code:string) {
        const mc = Mc(this._service,this._isDebugMode)
        return  await mc.getDingTalkUserInfo({appId:this._appId,code})
    }

    /**
     * 备品上架通知
     */
    async sendTemplateMsgOnShelf(userid_list: string, data: SendDataProperty) {
        const mc = Mc(this._service,this._isDebugMode)
        const json:AppSendDingTalkMessage = {
            appId: this._appId,
            template_id: 'f63544a6c20c4069b6833cd9be3fd108',
            data: JSON.stringify(data),
            userid_list
        }
        return await mc.sendDingTalkMessage(json)
    }

    /**
     * 备品预检通知
     */
    async sendTemplateMsgPreInspection(userid_list: string, data: SendDataProperty) {
        const mc = Mc(this._service,this._isDebugMode)
        const json = {
            appId: this._appId,
            template_id: '559d93d3f455459895a7b81eda600792',
            data: JSON.stringify(data),
            userid_list
        }
        return await mc.sendDingTalkMessage(json)
    }

    /**
     * 备品换货通知
     */
    async sendTemplateMsgChange(userid_list: string, data: SendDataProperty) {
        const mc = Mc(this._service)
        const json = {
            appId: this._appId,
            template_id: '29e7205d2c284c1cb4e72fa45e1af77d',
            data: JSON.stringify(data),
            userid_list
        }
        return await mc.sendDingTalkMessage(json)
    }

    /**
     * 备品领用通知
     */
    async sendTemplateMsgPickUp(userid_list: string, data: SendDataProperty) {
        const mc = Mc(this._service,this._isDebugMode)
        const json = {
            appId: this._appId,
            template_id: '257a3f214b244e91a4656700eb356fa2',
            data: JSON.stringify(data),
            userid_list
        }
        return await mc.sendDingTalkMessage(json)
    }

    /**
     * 备品退销通知
     */
    async sendTemplateMsgReturn(userid_list: string, data: SendDataProperty) {
        const mc = Mc(this._service,this._isDebugMode)
        const json = {
            appId: this._appId,
            template_id: '6e7d45c4c1974053a7c1ae23df013277',
            data: JSON.stringify(data),
            userid_list
        }
        return await mc.sendDingTalkMessage(json)
    }

    /**
     * 智能配发柜-备品领用委托通知
     */
    async sendTemplateMsgPickUpEntrust(){

    }

}
