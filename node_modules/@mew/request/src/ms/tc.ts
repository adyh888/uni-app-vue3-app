import {mewMsDelete, mewMsPost, mewRequest, Request} from "../request";
import {AxiosInstance} from "axios";
import {User} from "./uc";

export interface Type {
    enabled: boolean
    groupId: number
    deviceTypeId: number
    companyId: number
    class: string
    kind: string
    type: string
    belong: string
    desc: string
    id: number
    startAt?: number
    endAt?: number
}

export interface TypeProperty {
    enabled?: boolean
    groupId?: number
    deviceTypeId?: number
    companyId?: number
    class?: string
    kind?: string
    type?: string
    belong?: string
    desc?: string
    id?: number
}

export interface TypeSelectProperty extends TypeProperty {
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface TypeUpdateProperty extends TypeProperty {
    id: number
}

export interface TypeInsertProperty extends TypeProperty {
    type: string

}

export interface TypeDeleteProperty extends TypeProperty {
    id: number
}
export interface Specifications {
    groupId: number
    companyId: number
    imageInfo: string
    mark: string
    isMeteringTool: boolean
    isFixedAssets: boolean
    typeId: number
    materialCode: string
    alarmDays: number
    unLendDays: number
    checkCycle: number
    lifeCycle: string
    unit: string
    price: number
    effectiveTime: number
    model: string
    name: string
    nameCode: string
    id: number
    startAt?: number
    endAt?: number
}

export interface SpecificationsProperty {
    groupId?: number
    companyId?: number
    imageInfo?: string
    mark?: string
    isMeteringTool?: boolean
    isFixedAssets?: boolean
    typeId?: number
    materialCode?: string
    alarmDays?: number
    unLendDays?: number
    checkCycle?: number
    lifeCycle?: string
    unit?: string
    price?: number
    model?: string
    name?: string
    nameCode?: string
    id?: number
}

export interface SpecificationsSelectProperty extends SpecificationsProperty {
    effectiveTime?:number[]
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface SpecificationsUpdateProperty extends SpecificationsProperty {
    effectiveTime?:number
    id: number
}

export interface SpecificationsInsertProperty extends SpecificationsProperty {
    effectiveTime?:number
}

export interface SpecificationsDeleteProperty extends SpecificationsProperty {
    effectiveTime?:number
    id: number
}
export interface Item {
    isBindTag: boolean
    updateTime: number
    effectiveTime: number
    purchaseTime: number
    productTime: number
    warrantyTime: number
    checkTime: number
    tagValue: string
    tagType: string
    mark: string
    updateUser: string
    specificationId: number
    typeId: number
    companyId: number
    checkCycle: number
    checkResult: string
    checkStatus: string
    departmentId: number
    toolCabinetName: string
    manufacturer: string
    checkType: string
    fixedAssetsCode: string
    precisionLv: string
    toolStatus: string
    settingValue: string
    toolSpecification: string
    toolType: string
    toolClass: string
    toolName: string
    toolCode: string
    id: number
    suitId: number
    startAt?: number
    endAt?: number
}

export interface ItemProperty {
    isBindTag?: boolean
    checkCycle?: number
    checkResult?: string
    tagValue?: string
    checkStatus?: string
    tagType?: string
    mark?: string
    updateUser?: string
    certificateNo?: string
    specificationId?: number
    typeId?: number
    companyId?: number
    departmentId?: number
    suitId?: number
    toolCabinetName?: string
    manufacturer?: string
    checkType?: string
    fixedAssetsCode?: string
    precisionLv?: string
    toolStatus?: string
    settingValue?: string
    toolSpecification?: string
    toolType?: string
    toolClass?: string
    toolName?: string
    toolCode?: string
    id?: number
}

export interface ItemSelectProperty extends ItemProperty {
    updateTime?: number[]
    effectiveTime?: number[]
    purchaseTime?: number[]
    productTime?: number[]
    warrantyTime?: number[]
    checkTime?: number[]
    toolStatusArr?: string[]
    curPageNo?: number
    groupId?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface ItemUpdateProperty extends ItemProperty {
    checkTime?: number
    updateTime?: number
    effectiveTime?: number
    purchaseTime?: number
    productTime?: number
    warrantyTime?: number
    id: number
}

export interface ItemInsertProperty extends ItemProperty {
    checkTime?: number
    updateTime?: number
    effectiveTime?: number
    purchaseTime?: number
    productTime?: number
    warrantyTime?: number
}

export interface ItemDeleteProperty extends ItemProperty {
    id?: number
    idArr?: number[]
    checkTime?: number
    updateTime?: number
    effectiveTime?: number
    purchaseTime?: number
    productTime?: number
    warrantyTime?: number
}

export interface Suit {
    desc: string
    departmentId: number
    location: string
    groupId: number
    companyId: number
    suitTemplateId: number
    code: string
    name: string
    id: number
    startAt?: number
    endAt?: number
}

export interface SuitProperty {
    desc?: string
    departmentId?: number
    location?: string
    groupId?: number
    companyId?: number
    suitTemplateId?: number
    code?: string
    name?: string
    id?: number
}

export interface SuitSelectProperty extends SuitProperty {
    companyName?: string
    departmentName?: string
    suitTemplateName?: string
    needDetails?: boolean
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface SuitUpdateProperty extends SuitProperty {
    id: number
    toolCodes?:string[]
    needDetails?:boolean
    isComplete?:boolean
}

export interface SuitInsertProperty extends SuitProperty {
    toolCodes?:string[]
}

export interface SuitDeleteProperty extends SuitProperty {
    id: number
}
export interface SuitTemplate {
    desc: string
    departmentId: number
    groupId: number
    companyId: number
    name: string
    code: string
    id: number
    startAt?: number
    endAt?: number
}

export interface SuitTemplateProperty {
    desc?: string
    departmentId?: number
    groupId?: number
    companyId?: number
    name?: string
    code?: string
    id?: number
}

export interface SuitTemplateSelectProperty extends SuitTemplateProperty {
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface SuitTemplateUpdateProperty extends SuitTemplateProperty {
    id: number
}

export interface SuitTemplateInsertProperty extends SuitTemplateProperty {
    name: string
    code: string
}

export interface SuitTemplateDeleteProperty extends SuitTemplateProperty {
    id: number
}
export interface SuitTemplateItem {
    suitTemplateId: number
    num: number
    toolSpecification: string
    toolName: string
    id: number
    startAt?: number
    endAt?: number
}

export interface SuitTemplateItemProperty {
    suitTemplateId?: number
    num?: number
    toolSpecification?: string
    toolName?: string
    id?: number
}

export interface SuitTemplateItemSelectProperty extends SuitTemplateItemProperty {
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface SuitTemplateItemUpdateProperty extends SuitTemplateItemProperty {
    id: number
}

export interface SuitTemplateItemInsertProperty extends SuitTemplateItemProperty {
    suitTemplateId: number
    num: number
    toolName: string

}

export interface SuitTemplateItemDeleteProperty extends SuitTemplateItemProperty {
    id: number
}
export interface RecyclingType {
    desc: string
    departmentId: number
    groupId: number
    companyId: number
    code: string
    name: string
    id: number
    startAt?: number
    endAt?: number
}

export interface RecyclingTypeProperty {
    desc?: string
    departmentId?: number
    groupId?: number
    companyId?: number
    code?: string
    name?: string
    id?: number
}

export interface RecyclingTypeSelectProperty extends RecyclingTypeProperty {
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface RecyclingTypeUpdateProperty extends RecyclingTypeProperty {
    id: number
}

export interface RecyclingTypeInsertProperty extends RecyclingTypeProperty {
    name: string

}

export interface RecyclingTypeDeleteProperty extends RecyclingTypeProperty {
    id: number
}
// interface
// Tool
export interface Tool {
    id: number
    deviceId: string
    drawerId: string
    chargerId: number
    fullScaleWeight: number
    sensorWeight: number
    loadWeight: number
    serialNum: string
    location: string
    tags: string
    isGoods: boolean
    name: string
    imageInfo: string
    negate: boolean
    num: number
    lockIndex: number
    specificationId: number
    recyclingTypeId: number
    lockId: string
    partNo: string
    partDes: string
    itemNo: string
    quantity: number
    suitId: number
    parentToolId: number
    safetyStock: number
    shelvesNum: number
    status: boolean
    repairStatus: number
    preInspectionStatus: number
    top: number
    left: number
    width: number
    height: number
    group: string
    property: string
    url: string
    weight: number
    price: number
    type: number
    createdAt: number
    updatedAt: number
}

export interface ToolInsertBatchProperty {
    deviceId: string
    drawerNo: number
    drawerItemNum: number
}

export interface ToolInsertProperty {
    id: number
    deviceId: string
    drawerId: string
    lockIndex?: number
    lockId?: string
    chargerId?: number
    specificationId?: number
    recyclingTypeId?: number
    serialNum?: string
    tags?: string
    isGoods?: boolean
    location: string
    suitId?: number
    fullScaleWeight?: number
    sensorWeight?: number
    loadWeight?: number
    parentToolId?: number
    group?: string
    property?: string
    imageInfo?: string
    negate?: boolean
    partNo?: string
    partDes?: string
    itemNo?: string
    quantity?: number
    safetyStock?: number
    status?: boolean
    preInspectionStatus?: number
    type?: number
    repairStatus?: number
    top?: number
    left?: number
    width?: number
    height?: number
    url?: string
    num?: number
    weight?: number
    price?: number
    shelvesNum?: number
}

export interface ToolUpdateProperty {
    id?: number
    deviceId?: string
    drawerId?: string
    chargerId?: number
    specificationId?: number
    recyclingTypeId?: number
    serialNum?: string
    location?: string
    group?: string
    tags?: string
    isGoods?: boolean
    property?: string
    lockIndex?: number
    lockId?: string
    fullScaleWeight?: number
    sensorWeight?: number
    loadWeight?: number
    imageInfo?: string
    suitId?: number
    parentToolId?: number
    negate?: boolean
    partNo?: string
    partDes?: string
    itemNo?: string
    quantity?: number
    safetyStock?: number
    status?: boolean
    preInspectionStatus?: number
    type?: number
    repairStatus?: number
    top?: number
    left?: number
    width?: number
    height?: number
    url?: string
    key?: string
    num?: number
    weight?: number
    price?: number
    shelvesNum?: number
    updateNum?: number
    updateShelvesNum?: number
}

export interface ToolDeleteProperty {
    id?: number
    deviceId?: string
    drawerId?: string
    chargerId?: number
    specificationId?: number
    recyclingTypeId?: number
    serialNum?: string
    fullScaleWeight?: number
    sensorWeight?: number
    loadWeight?: number
    location?: string
    suitId?: number
    lockIndex?: number
    lockId?: string
    parentToolId?: number
    group?: string
    property?: string
    imageInfo?: string
    negate?: boolean
    tags?: string
    isGoods?: boolean
    partNo?: string
    partDes?: string
    itemNo?: string
    quantity?: number
    safetyStock?: number
    status?: boolean
    preInspectionStatus?: number
    type?: number
    repairStatus?: number
    top?: number
    left?: number
    width?: number
    height?: number
    url?: string
    num?: number
    weight?: number
    price?: number
    shelvesNum?: number
}

export interface ToolSelectProperty {
    id?: number
    groupId?: number
    companyId?: number
    departmentId?: number
    specificationId?: number
    recyclingTypeId?: number
    teamId?: number
    noRfid?: boolean
    key?: string
    lockIndex?: number
    lockId?: string
    suitId?: number
    parentToolId?: number
    name?: string
    fullScaleWeight?: number
    sensorWeight?: number
    loadWeight?: number
    imageInfo?: string
    deviceKind?: string
    isPTId?: boolean
    inWarehouse?: boolean
    group?: string
    property?: string
    deviceId?: string
    drawerId?: string
    tags?: string
    isGoods?: boolean
    chargerId?: number
    serialNum?: string
    location?: string
    url?: string
    negate?: boolean
    isRent?: boolean
    partNo?: string
    partDes?: string
    itemNo?: string
    quantity?: number
    stockStatus?: number
    safetyStock?: number
    status?: boolean
    preInspectionStatus?: number
    type?: number
    repairStatus?: number
    weight?: number
    price?: number
    shelvesNum?: number
    num?: number
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
    lendStartTime?: number
    lendEndTime?: number
}

// TcRfid
export interface Rfid {
    id: number
    toolId: number
    itemId: number
    suitId: number
    epc: string
    tid: string
    user: string
    status: number
    isRepair: boolean
    onShelf: number
    enabled: boolean
    deviceId: string
    createdAt: number
    updatedAt: number
}

export interface RfidInsertProperty {
    id?: number
    enabled: boolean
    isRepair?: boolean
    onShelf?: number
    epc: string
    tid: string
    user: string
    status: number
    toolId?: number
    itemId?: number
    suitId?: number
    deviceId?: string
}

export interface RfidUpdateProperty {
    id?: number
    isRepair?: boolean
    onShelf?: number
    enabled?: boolean
    epc?: string
    tid?: string
    user?: string
    status?: number
    toolId?: number
    itemId?: number
    suitId?: number
    deviceId?: string
    inWarehouse?:number
}

export interface RfidSelectProperty {
    deviceId?: string
    isRepair?: boolean
    onShelf?: number
    deviceIds?: string
    partDes?: string
    toolArr?: string[]
    id?: number
    enabled?: boolean
    epc?: string
    partNo?: string
    tid?: string
    user?: string
    status?: number
    groupId?: number
    companyId?: number
    departmentId?: number
    teamId?: number
    toolId?: number
    itemId?: number
    suitId?: number
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface RfidSelectBatchProperty {
    tidArr: string[]
    epcArr: string[]
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface RfidDeleteProperty {
    id?: number
    isRepair?: boolean
    onShelf?: number
    deviceId?: string
    enabled?: boolean
    epc?: string
    tid?: string
    user?: string
    status?: number
    toolId?: number
    itemId?: number
    suitId?: number
}

// Rent
export interface Rent {
    id: number
    uid: number
    unionid: string
    type: number
    totalPrice: number
    lendTime: number
    returnTime: number
    deviceId: string
    epc: string
    toolId: number
    phoneNo: string
    companyId: number
    duration: number
    result: number
    isReturn: boolean
    isSettlement: boolean
    createdAt: number
    updatedAt: number
}

export interface RentDeleteProperty {
    id?: number
    uid?: number
    totalPrice?: number
    unionid?: string
    deviceId?: string
    toolId?: number
    epc?: string
    phoneNo?: string
    companyId?: number
    duration?: number
    result?: number
    isReturn?: boolean
    isSettlement?: boolean
}

export interface RentUpdateReturnProperty {
    toolId: number
    deviceId?: string
}

export interface RentSelectProperty extends RentDeleteProperty {
    username?: string
    toolName?: string
    lendTime?: number[]
    returnTime?: number[]
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface RentInsertProperty extends RentDeleteProperty {
    deviceId: string
    toolId: number
    lendTime: number
    returnTime?: number
}

export interface RentUpdateProperty extends RentDeleteProperty {
    id: number
    time?: number
    lendTime?: number
    returnTime?: number
}

// Transfer
export interface Transfer {
    id: number
    transferNo: string
    name: string
    groupId: number
    uid: number
    companyId: number
    deviceIdIn: string
    deviceIdOut: string
    status: number
    deadline: number
    createdAt: string
    updatedAt: string
}

export interface TransferInsertProperty {
    id?: number
    uid?: number
    transferNo: string
    name?: string
    groupId: number
    companyId: number
    deviceIdIn: string
    deviceIdOut: string
    deadline?: number
    status: number
}

export interface TransferDeleteProperty {
    id?: number
    uid?: number
    transferNo?: string
    name?: string
    groupId?: number
    companyId?: number
    deviceIdIn?: string
    deviceIdOut?: string
    deadline?: number
    status?: number
}

export interface TransferUpdateProperty {
    id: number
    uid?: number
    transferNo?: string
    name?: string
    groupId?: number
    companyId?: number
    deviceIdIn?: string
    deviceIdOut?: string
    deadline?: number
    status?: number
}

export interface TransferSelectProperty {
    id?: number
    uid?: number
    transferNo?: string
    name?: string
    groupId?: number
    companyId?: number
    deviceIdIn?: string
    deviceIdOut?: string
    deadline?: number
    status?: number
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
    deadlineStart?: number
    deadlineEnd?: number
}

// TransferItem
export interface TransferItem {
    id: number
    transferId: number
    toolId: number
    location: string
    partNo: string
    partDes: string
    itemNo: string
    quantity: number
    isPutIn: boolean
    createdAt: string
    updatedAt: string
}

export interface TransferItemInsertProperty {
    id?: number
    transferId: number
    toolId: number
    quantity: number
    isPutIn: boolean
}

export interface TransferItemInsertBatchProperty {
    id?: number
    toolArr?: number[]
    transferId: number
    quantity: number
    isPutIn: boolean
}

export interface TransferItemDeleteProperty {
    id?: number
    transferId?: number
    toolId?: number
    location?: string
    partNo?: string
    partDes?: string
    itemNo?: string
    quantity?: number
    isPutIn?: boolean
}

export interface TransferItemSelectProperty {
    id?: number
    transferId?: number
    toolId?: number
    location?: string
    partNo?: string
    partDes?: string
    itemNo?: string
    quantity?: number
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
    isPutIn?: boolean
    transferNo?: string
}

export interface TransferItemUpdateProperty {
    id: number
    transferId?: number
    toolId?: number
    location?: string
    partNo?: string
    partDes?: string
    itemNo?: string
    quantity?: number
    isPutIn?: boolean
}

export interface TransferItemIdProperty {
    id: number
}

// WorkOrder
export interface WorkOrder {
    id: number
    uid: number
    uid2: number
    user: User
    user2: User
    name: string
    workorderNo: string
    firstName: string
    phoneNo: string
    onShelf: number
    deviceId: string
    status: number
    deadline: number
    createdAt: number
    updatedAt: number
}

export interface WorkOrderInsertProperty {
    id?: number
    uid: number
    uid2?: number
    onShelf?: number
    name?: string
    firstName?: string
    phoneNo?: string
    workorderNo: string
    deviceId: string
    status: number
    enabled?: boolean
    deadline?: number
}

export interface WorkOrderDeleteProperty {
    id?: number
    uid?: number
    uid2?: number
    onShelf?: number
    name?: string
    firstName?: string
    phoneNo?: string
    workorderNo?: string
    deviceId?: string
    status?: number
    enabled?: boolean
    deadline?: number
}

export interface WorkOrderUpdateProperty {
    id: number
    uid?: number
    onShelf?: number
    uid2?: number
    name?: string
    firstName?: string
    workorderNo?: string
    phoneNo?: string
    deviceId?: string
    status?: number
    enabled?: boolean
    deadline?: number
}

export interface WorkOrderSelectProperty {
    id?: number
    username?: string
    name?: string
    uid?: number
    onShelf?: number
    uid2?: number
    workorderNo?: string
    firstName?: string
    phoneNo?: string
    deviceId?: string
    status?: number
    enabled?: boolean
    deadline?: number
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
    deadlineStart?: number
    deadlineEnd?: number
}

export interface WorkOrderDataProperty {
    type: number
    startDate?: number
    endDate?: number
}

// WorkOrderItem
export interface WorkOrderItem {
    id: number
    workorderId: number
    workorderNo: string
    toolId: number
    partId: number
    location: string
    partNo: string
    partDes: string
    itemNo: string
    batchNo: string
    quantity: number
    isPutIn: boolean
    createdAt: string
    updatedAt: string
}

export interface WorkOrderItemInsertProperty {
    id?: number
    workorderId?: number
    workorderNo: string
    toolId?: number
    partId?: number
    quantity: number
    isPutIn: boolean
    status: boolean
}

export interface WorkOrderItemInsertBatchProperty {
    uid?: number
    workorderNo?: string
    workorderId?: number
    name?: string
    deviceId?: string
    status?: number
    deadline?: number
    toolId?: number
    partId?: number
    quantity?: number
    isPutIn?: boolean
    toolArr?: any[]
}

export interface WorkOrderItemUpdateProperty {
    id: number
    workorderNo?: number
    workorderId?: number
    toolId?: number
    partId?: number
    location?: string
    partNo?: string
    partDes?: string
    itemNo?: string
    quantity?: number
    isPutIn?: boolean
}

export interface WorkOrderItemDeleteProperty {
    id?: number
    workorderNo?: number
    workorderId?: number
    toolId?: number
    partId?: number
    location?: string
    partNo?: string
    partDes?: string
    itemNo?: string
    quantity?: number
    isPutIn?: boolean
}

export interface WorkOrderItemSelectProperty {
    id?: number
    workorderId?: number
    workorderNo?: number
    toolId?: number
    partId?: number
    location?: string
    partNo?: string
    partDes?: string
    itemNo?: string
    quantity?: number
    isPutIn?: boolean
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

// Bill
export interface Bill {
    id: number
    billNo: string
    billType: number
    billTypeName: string
    itemNo: string
    itemDesc: string
    batchNo: string
    num: number
    uid: number
    toolId: number
    deviceId: string
    status: number
    description: string
    limitTime: number[]
    createdAt: number
    updatedAt: number
}

export interface BillSelectProperty {
    id?: number
    billNo?: string
    billType?: number
    billTypeName?: string
    itemNo?: string
    itemDesc?: string
    batchNo?: string
    num?: number
    uid?: number
    toolId?: number
    deviceId?: string
    status?: number
    description?: string
    limitTime?: number[]
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface BillInsertProperty {
    id?: number
    billNo: string
    billType: number
    billTypeName?: string
    itemNo?: string
    itemDesc?: string
    batchNo?: string
    num?: number
    uid?: number
    toolId?: number
    deviceId?: string
    status: number
    description?: string
    limitTime: number
}

export interface BillUpdateProperty {
    id: number
    billNo?: string
    billType?: number
    billTypeName?: string
    itemNo?: string
    itemDesc?: string
    batchNo?: string
    num?: number
    uid?: number
    toolId?: number
    deviceId?: string
    status?: number
    description?: string
    limitTime?: number
}

export interface BillDeleteProperty {
    id?: number
    billNo?: string
    billType?: number
    billTypeName?: string
    itemNo?: string
    itemDesc?: string
    batchNo?: string
    num?: number
    uid?: number
    toolId?: number
    deviceId?: string
    status?: number
    description?: string
    limitTime?: number[]
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface Part {
    id: number;
    deviceId: string;
    name: string;
    imageInfo: string;
    num: number;
    desc: string;
    itemNo: string;
    batchNo: string;
    status: boolean;
    repairStatus: number;
    preInspectionStatus: number;
    type: string;
    createdAt: string
    updatedAt: string
    typeId:number
}

export interface PartProperty {
    type?: number;
    preInspectionStatus?: number;
    repairStatus?: number;
    status?: boolean;
    batchNo?: string;
    itemNo?: string;
    desc?: string;
    num?: number;
    price?: number;
    package?: number;
    packageQty?: number;
    typeId?: number;
    imageInfo?: string;
    name?: string;
    deviceId?: string;
    id?: number
}

export interface PartSelectProperty extends PartProperty {
    groupId?:number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}

export interface PartInsertProperty extends PartProperty {
    itemNo: string;
}

export interface PartUpdateProperty extends PartInsertProperty {
    id: number;
}

export interface PartDeleteProperty {
    id: number;
}

/**
 * 批量插入rfid更新
 * @param params
 */
export interface rfidUpdateBatchParamType {
    idArr: number[]
    status: boolean
}

export interface commonProperty{
    startAt?:number
    endAt?:number
    type?:string
}

export interface BindParentToolProperty {
    toolIdArr: number[];
    parentToolId: number;
    bindType?: number;
}

export interface RfidShelfProperty{
    epcArr?:string[];
    tidArr?:string[];
    uid?: number;
    toolId: number;
    deviceId: string;
    phoneNo?: string;
    username?: string;
    onShelf: number;
    time?: number;
}

export function Tc(service: any, isDebugMode: boolean = false) {
    return {
		type: new Request<Type, TypeInsertProperty, TypeDeleteProperty, TypeUpdateProperty, TypeSelectProperty>('/tc/type', service, isDebugMode),
		specifications: new Request<Specifications, SpecificationsInsertProperty, SpecificationsDeleteProperty, SpecificationsUpdateProperty, SpecificationsSelectProperty>('/tc/specifications', service, isDebugMode),
		item: new Request<Item, ItemInsertProperty, ItemDeleteProperty, ItemUpdateProperty, ItemSelectProperty>('/tc/item', service, isDebugMode),
		suit: new Request<Suit, SuitInsertProperty, SuitDeleteProperty, SuitUpdateProperty, SuitSelectProperty>('/tc/suit', service, isDebugMode),
		suit_template: new Request<SuitTemplate, SuitTemplateInsertProperty, SuitTemplateDeleteProperty, SuitTemplateUpdateProperty, SuitTemplateSelectProperty>('/tc/suit_template', service, isDebugMode),
		suit_template_item: new Request<SuitTemplateItem, SuitTemplateItemInsertProperty, SuitTemplateItemDeleteProperty, SuitTemplateItemUpdateProperty, SuitTemplateItemSelectProperty>('/tc/suit_template_item', service, isDebugMode),
		recycling_type: new Request<RecyclingType, RecyclingTypeInsertProperty, RecyclingTypeDeleteProperty, RecyclingTypeUpdateProperty, RecyclingTypeSelectProperty>('/tc/recycling_type', service, isDebugMode),
        // class
        tool: new Request<Tool, ToolInsertProperty, ToolDeleteProperty, ToolUpdateProperty, ToolSelectProperty>('/tc/tool', service, isDebugMode),
        rfid: new Request<Rfid, RfidInsertProperty, RfidDeleteProperty, RfidUpdateProperty, RfidSelectProperty>('/tc/rfid', service, isDebugMode),
        rent: new Request<Rent, RentInsertProperty, RentDeleteProperty, RentUpdateProperty, RentSelectProperty>('/tc/rent', service, isDebugMode),
        transfer: new Request<Transfer, TransferInsertProperty, TransferDeleteProperty, TransferUpdateProperty, TransferSelectProperty>('/tc/transfer', service, isDebugMode),
        transfer_item: new Request<TransferItem, TransferItemInsertProperty, TransferItemDeleteProperty, TransferItemUpdateProperty, TransferItemSelectProperty>('/tc/transfer_item', service, isDebugMode),
        workorder: new Request<WorkOrder, WorkOrderInsertProperty, WorkOrderDeleteProperty, WorkOrderUpdateProperty, WorkOrderSelectProperty>('/tc/workorder', service, isDebugMode),
        workorder_item: new Request<WorkOrderItem, WorkOrderItemInsertProperty, WorkOrderItemDeleteProperty, WorkOrderItemUpdateProperty, WorkOrderItemSelectProperty>('/tc/workorder_item', service, isDebugMode),
        bill: new Request<Bill, BillInsertProperty, BillDeleteProperty, BillUpdateProperty, BillSelectProperty>('/tc/bill', service, isDebugMode),
        part: new Request<Part, PartInsertProperty, PartDeleteProperty, PartUpdateProperty, PartSelectProperty>('/tc/part', service, isDebugMode),
        // function
        getVersion: (service: AxiosInstance) => mewRequest('/gc/select/version', {}, 'POST', service, isDebugMode),
        insertTransferItemBatch: (service: AxiosInstance) => async function (json: TransferItemInsertBatchProperty) {
            const res = await mewMsPost(`/tc/transfer/insert/batch`, json, service, isDebugMode)
            return {
                code: res.code as number,
                data: res.data as TransferItem[]
            }
        },
        /**
         * 查询工具借用表
         * @param json
         */
        insertToolBatch: async function (json: ToolInsertBatchProperty) {
            const res = await mewMsDelete('/tc/tool/insert/batch', json, service, isDebugMode)
            return {
                code: res.code as number,
                data: res.data as Tool[]
            }
        },
        chartData: (service: AxiosInstance) => async function (params: { type }) {
            return await mewMsPost('/tc/workorder/chartData', params, service, isDebugMode)
        },
        rfidUpdateBatch: (service: AxiosInstance) => async function (params: rfidUpdateBatchParamType) {
            const url = '/tc/rfid/update/batch'
            const msg = '标签状态更新'
            const res = await mewMsPost(url, params, service, isDebugMode)
            return res.code === 0
        },

        /**
         * 生成工单和工单详情
         * @param params
         */
        workorderItemInit: async function (params: any) {
            const url = '/tc/workorder_item/init'
            const res = await mewMsPost(url, params, service, isDebugMode)
            return res.data
        },
        //备件使用情况百分比图,默认使用上周的数据
        workorderPro:async(params: commonProperty) => {
            const res = await mewRequest('/tc/workorder/workorderPro', params,'POST', service, isDebugMode)
            console.log("workorderPro", res)
            return res
        },
        //柜子使用情况
        locationStatus:async(params: commonProperty) => {
            const res = await mewRequest('/tc/workorder/locationStatus', params,'POST', service, isDebugMode)
            console.log("locationStatus", res)
            return res
        },
        //未预检top5,默认使用上周的数据
        unInspectTop:async(params: commonProperty) => {
            const res = await mewRequest('/tc/workorder/unInspectTop', params,'POST', service, isDebugMode)
            console.log("unInspectTop", res)
            return res
        },
        //领用top5,默认使用上周的数据
        receivedTop:async(params: commonProperty) => {
            const res = await mewRequest('/tc/workorder/receivedTop', params,'POST', service, isDebugMode)
            console.log("receivedTop", res)
            return res
        },
        //预检top5,默认使用上周的数据
        inspectTop:async(params: commonProperty) => {
            const res = await mewRequest('/tc/workorder/inspectTop', params,'POST', service, isDebugMode)
            console.log("inspectTop", res)
            return res
        },
        //部门预检统计,默认使用上周的数据
        depPreInspectStatistics:async(params: commonProperty) => {
            const res = await mewRequest('/tc/workorder/depPreInspectStatistics', params,'POST', service, isDebugMode)
            console.log("depPreInspectStatistics", res)
            return res
        },
        //部门预检率,默认使用上周的数据
        depPreInspectPro:async(params: commonProperty) => {
            const res = await mewRequest('/tc/workorder/depPreInspectPro', params,'POST', service, isDebugMode)
            console.log("depPreInspectPro", res)
            return res
        },
        //部门预检率,默认使用上七周的数据
        depPreInspectProByWeek:async(params: commonProperty) => {
            const res = await mewRequest('/tc/workorder/depPreInspectProByWeek', params,'POST', service, isDebugMode)
            console.log("depPreInspectProByWeek", res)
            return res
        },
        //获取总工单数,预留备件数,预检备件数,预检率,合格数项,备件合格率,默认使用上周的数据
        totalWorkorderNumAndOther:async(params: commonProperty) => {
            const res = await mewRequest('/tc/workorder/totalWorkorderNumAndOther', params,'POST', service, isDebugMode)
            console.log("totalWorkorderNumAndOther", res)
            return res
        },
        //获取总工单数,预留备件数,预检备件数,预检率,合格数项,备件合格率,默认使用上周的数据
        bindParentTool:async(params: BindParentToolProperty) => {
            // console.log("bindParentToolRes:", res)
            return await mewRequest('/tc/tool/bindParentTool', params, 'POST', service, isDebugMode)
        },
        //上下架
        rfidShelf:async(params: RfidShelfProperty) => {
            return await mewRequest('/tc/rfid/shelf', params, 'POST', service, isDebugMode)
        },
    }
}
