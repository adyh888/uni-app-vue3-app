import {mewRequest, Request} from "../request";

export interface Province {
    name?: string
    code?: string
    id?: number

}

export interface ProvinceSelectProperty extends Province{
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface ProvinceUpdateProperty extends Province{
    id: number

}

export interface ProvinceInsertProperty extends Province{
    name: string
    code: string

}

export interface ProvinceDeleteProperty extends Province{
    id: number

}
export interface City {
    provinceCode?: string
    name?: string
    code?: string
    id?: number

}

export interface CitySelectProperty extends City{
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface CityUpdateProperty extends City{
    id: number

}

export interface CityInsertProperty extends City{
    provinceCode: string
    name: string
    code: string

}

export interface CityDeleteProperty extends City{
    id: number

}
export interface Area {
    cityCode?: string
    name?: string
    code?: string
    id?: number

}

export interface AreaSelectProperty extends Area{
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface AreaUpdateProperty extends Area{
    id: number

}

export interface AreaInsertProperty extends Area{
    cityCode: string
    name: string
    code: string

}

export interface AreaDeleteProperty extends Area{
    id: number

}
export interface Village {
    status?: boolean
    address?: string
    area?: string
    city?: string
    province?: string
    phoneNo?: string
    fullName?: string
    uid?: number
    conf?: string
    name?: string
    id?: number

}

export interface VillageSelectProperty extends Village{
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface VillageUpdateProperty extends Village{
    id: number

}

export interface VillageInsertProperty extends Village{
    villageName: string

}

export interface VillageDeleteProperty extends Village{
    id: number

}
export interface Building {
    status?: boolean
    roomNum?: number
    unit?: string
    floorNum?:number
    villageId?: number
    buildingNo?: string
    id?: number

}

export interface BuildingSelectProperty extends Building{
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface BuildingUpdateProperty extends Building{
    id: number

}

export interface BuildingInsertProperty extends Building{
    roomNum: number
    unit: string
    villageId: number
    buildingNo: string

}

export interface BuildingDeleteProperty extends Building{
    id: number

}
export interface Family {
    status?: boolean
    isHouseholder?: boolean
    uid?: number
    rankId?: number
    roomNo?: string
    familyNo?: string
    unitNo?: string
    villageId?: number
    id?: number

}

export interface FamilySelectProperty extends Family{
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface FamilyUpdateProperty extends Family{
    id: number
    buildingNo?:string
}

export interface FamilyInsertProperty extends Family{
    uid?: number
    unitNo: string
    roomNo: string
    villageId: number
    buildingNo:string
}

export interface FamilyDeleteProperty extends Family{
    id: number

}

export interface Content {
    releaseTime: number
    groupId: number
    companyId: number
    enabled: boolean
    number: string
    isTopping: boolean
    content: string
    id?: number
    startAt?: number
    endAt?: number
}

export interface ContentProperty {
    releaseTime?: number
    groupId?: number
    companyId?: number
    enabled?: boolean
    number?: string
    isTopping?: boolean
    content?: string
    id?: number
}

export interface ContentSelectProperty extends ContentProperty {
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface ContentUpdateProperty extends ContentProperty {
    id: number
}

export interface ContentInsertProperty extends ContentProperty {
    enabled: boolean
    content: string

}

export interface ContentDeleteProperty extends ContentProperty {
    id: number
}
// interface

// Group
export interface Group {
    id: number
    name: string
    province: string
    city: string
    area: string
    uris: string
    companies?: Company[]
    createdAt: number
    updatedAt: number
}

export interface GroupDeleteProperty {
    name?: string
    province?: string
    city?: string
    area?: string
    uris?: string
    id: number
}

export interface GroupInsertProperty {
    name: string
    province: string
    city: string
    area?: string
    uris?: string
    id?: number
}

export interface GroupUpdateProperty extends GroupInsertProperty {
    id: number
}

export interface GroupSelectProperty {
    id?: number
    name?: string
    province?: string
    city?: string
    area?: string
    uris?: string
    pageSize?: number
    curPageNo?: number
    startAt?: Date
    endAt?: Date
}


// Company
export interface Company {
    id: number
    name: string
    province: string
    city: string
    area: string
    phoneNo: string
    email: string
    groupId: number
    uris: string
    departments?: Department[]
    createdAt: string
    updatedAt: string
}

export interface CompanyDeleteProperty {
    id: number
    name?: string
    phoneNo?: string
    email?: string
    province?: string
    city?: string
    area?: string
    groupId?: number
    uris?: string
}

export interface CompanyUpdateProperty {
    id: number
    name?: string
    province?: string
    phoneNo?: string
    email?: string
    city?: string
    area?: string
    groupId?: number
    uris?: string
}

export interface CompanySelectProperty {
    id?: number
    name?: string
    province?: string
    username?: string
    phoneNo?: string
    email?: string
    city?: string
    area?: string
    groupId?: number
    uris?: string
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface CompanyInsertProperty {
    id?: number
    name: string
    province?: string
    phoneNo?: string
    email?: string
    city?: string
    area?: string
    groupId: number
    uris?: string
}


// Department
export interface Department {
    id: number
    name: string
    groupId?: number
    companyId: number
    teams: Team[]
    createdAt: string
    updatedAt: string
}

export interface DepartmentInsertProperty {
    id?: number
    name: string
    groupId?: number
    companyId?: number
}

export interface DepartmentDeleteProperty {
    id: number
    name?: string
    groupId?: number
    companyId?: number
}

export interface resInsertAndUpdateDeleteSearchInterface {
    code: number
    data?: any
    error?: string
    total?: number
}

export interface DepartmentUpdateProperty {
    id: number
    name: string
    groupId?: number
    companyId?: number
}

export interface DepartmentSelectProperty {
    id?: number
    name?: string
    groupId?: number
    companyId?: number
    pageSize?: number
    curPageNo?: number
    startAt?: Date
    endAt?: Date
}


// Device
export interface Device {
    id: string
    name: string
    lockType: string
    groupId: number
    companyId: number
    departmentId: number
    teamId: number
    familyId: number
    villageId: number
    deliveryPointId: number
    rotationChart: string
    longitudeLatitude: string
    deviceTypeId: number
    deviceType?: DeviceType
    phoneNo: string
    conf: string
    location: string
    createdAt: string
    updatedAt: string
}

export interface DeviceSelectProperty {
    id?: string
    deviceTypeId?: number
    location?: string
    longitudeLatitude?: string
    director?: string
    phoneNo?: string
    usageTimeStart?: number
    selectParams?:string[]
    usageTimeEnd?: number
    price?: number
    villageId?: number
    deliveryPointId?: number
    familyId?: number
    imageUrl?: string
    partDes?: string
    lockType?: string
    mac?: string
    name?: string
    androidId?: string
    arcfaceActiveCode?: string
    groupId?: number
    needCapacity?: boolean
    companyId?: number
    departmentId?: number
    teamId?: number
    conf?: string
    pageSize?: number
    curPageNo?: number
    startAt?: Date
    endAt?: Date
}

export interface DeviceInsertProperty {
    id?: string
    deviceTypeId?: number
    location?: string
    longitudeLatitude?: string
    director?: string
    phoneNo?: string
    villageId?: number
    deliveryPointId?: number
    usageTime?: number | string
    price?: number
    familyId?: number
    imageUrl?: string
    lockType?: string
    name?: string
    groupId?: number
    companyId?: number
    departmentId?: number
    teamId?: number
    conf?: string
    mail?:string
}

export interface DeviceUpdateProperty {
    id: string
    deviceTypeId?: number
    location?: string
    director?: string
    phoneNo?: string
    usageTime?: number | string
    price?: number
    familyId?: number
    imageUrl?: string
    villageId?: number
    deliveryPointId?: number
    lockType?: string
    name?: string
    groupId?: number
    companyId?: number
    departmentId?: number
    teamId?: number
    conf?: any
    rotationChart?: string
    longitudeLatitude?: string
    mail?:string

}

export interface DeviceDeleteProperty {
    id?: string
    lockType?: string
    deviceTypeId?: number
    phoneNo?: string
    villageId?: number
    deliveryPointId?: number
    longitudeLatitude?: string
    location?: string
    director?: string
    usageTime?: number
    familyId?: number
    price?: number
    imageUrl?: string
    name?: string
    groupId?: number
    companyId?: number
    departmentId?: number
    teamId?: number
    conf?: string
    mail?:string

}

export interface InitProperty {
    deviceIds: string[]
}

export interface PictureUploadProperty {
    id: string
    deviceId: string
    rotationChart: string
    name?: string
    lockType?: string
    groupId?: number
    companyId?: number
    departmentId?: number
    conf?: string
}

// Team
export interface Team {
    id: number
    name: string
    groupId?: number
    companyId?: number
    departmentId: number
    createdAt: string
    updatedAt: string
}

export interface TeamInsertProperty {
    id?: number
    name: string
    groupId: number
    companyId: number
    departmentId: number
}

export interface TeamUpdateProperty {
    id: number
    name?: string
    groupId?: number
    companyId?: number
    departmentId?: number
}

export interface TeamSelectProperty {
    id?: number
    groupId?: number
    companyId?: number
    departmentId?: number
    name?: string
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface TeamBelongSelectProperty {
    groupIdArr?: number[]
    companyIdArr?: number[]
    departmentIdArr?: number[]
    teamIdArr?: number[]
}

export interface LocationGetEmptyCabinetProperty {
    type:string,
    ioIp?:string
}

// export interface TeamSelectProperty {
//   groupIdArr?: string[];
//   companyIdArr?: string[];
//   departmentIdArr?: string[];
//   teamIdArr?: string[];
// }
export interface TeamDeleteProperty {
    name?: string
    companyId?: number
    groupId?: number
    departmentId?: number
    id?: number
}

// 充电
export interface Charger {
    id: number
    name: string
    type: string
    deviceId: string
    chargingTime: number
    companyId: number
    image: string
    brand: string
    createdAt: number
    updatedAt: number
}

export interface ChargerDeleteProperty {
    id?: number
    name?: string
    type?: string
    deviceId?: string
    brand?: string
    chargingTime?: number
    image?: string
}

export interface ChargerSelectProperty extends ChargerDeleteProperty {
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface ChargerInsertProperty {
    id?: number
    name: string
    type?: string
    deviceId: string
    brand?: string
    chargingTime: number
    image?: string
}

export interface ChargerUpdateProperty {
    id: number
    name?: string
    type?: string
    deviceId?: string
    brand?: string
    chargingTime?: number
    image?: string
}


// IoAttr
export interface IoAttr {
    id: number
    ioId: number
    ioName: string
    title: string
    type: string
    default: string
}

export interface IoAttrSelectProperty {
    id?: number
    moduleName?: string
    ioId?: number
    title?: string
    type?: string
    default?: string
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface IoAttrInsertProperty {
    id?: number
    ioId: number
    title?: string
    type?: string
    default?: string
}

export interface IoAttrUpdateProperty {
    id: number
    ioId?: number
    title?: string
    type?: string
    default?: string
}

export interface IoAttrDeleteProperty {
    id?: number
    ioId?: number
    title?: string
    type?: string
    default?: string
}


// Io
export interface Io {
    id: number
    name: string
    deviceId: number
    type: number
    maximum: number
    minimum: number
    default: number
    status: number
}

export interface IoSelectProperty {
    id?: number
    name?: string
    deviceId?: string
    type?: number
    maximum?: number
    minimum?: number
    default?: number
    status?: number
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface IoInsertProperty {
    id?: number
    name: string
    deviceId?: string
    type: number
    maximum?: number
    minimum?: number
    default?: number
    status?: number
}

export interface IoUpdateProperty {
    id: number
    name: string
    deviceId: string
    type: number
    maximum: number
    minimum: number
    default: number
    status: number
}

export interface IoDeleteProperty {
    id?: number
    name?: string
    deviceId?: string
    type?: number
    maximum?: number
    minimum?: number
    default?: number
    status?: number
}


// Location
export interface Location {
    id: number
    locationName: string
    deviceId: string
    type: string
    isLock: boolean
    priority: number
    totalCapacity: number
    remainingCapacity: number
    toolId: number
    status: number
    createdAt: number
    updatedAt: number
}

export interface LocationSelectProperty {
    id?: number
    locationName?: string
    deviceId: string
    toolId?: number
    isLock?: boolean
    type?: string
    totalCapacity?: number
    remainingCapacity?: number
    name?:string
    priority?: number
    groupId?: number
    companyId?: number
    departmentId?: number
    teamId?: number
    status?: number
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
    garbageId?:number
    workorderNo?:string
}

export interface LocationInsertProperty {
    id: number
    locationName?: string
    workorderNo?: string
    priority?: number
    size?: string
    type?: string
    group?: string
    isLock?: boolean
    deviceId?: string
    totalCapacity?: number
    remainingCapacity?: number
    index?: number
    toolId?: number
    name?: string
    partId?: number
    status?: number
    garbageId?:number
}

export interface LocationUpdateProperty {
    id: number
    locationName?: string
    workorderNo?: string
    size?: string
    totalCapacity?: number
    remainingCapacity?: number
    priority?: number
    type?: string
    isLock?: boolean
    group?: string
    deviceId?: string
    index?: number
    toolId?: number
    name?: string
    partId?: number
    status?: number
    garbageId?:number
}

export interface LocationDeleteProperty {
    id?: number
    isLock?: boolean
    totalCapacity?: number
    remainingCapacity?: number
    locationName?: string
    toolId?: number
    status?: number
}


// Cabinet
export interface Cabinet {
    id: number
    garbageId: number
    title: string
    deviceId: string
    name: string
    overflowType: string
    cleanRemoveStatus: boolean
    createdAt: number
    updatedAt: number
}

export interface CabinetSelectProperty {
    id?: number
    garbageId?: number
    title?: string
    deviceId?: string
    name?: string
    overflowType?: string
    cleanRemoveStatus?: boolean
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface CabinetInsertProperty {
    id?: number
    title: string
    garbageId?: number
    overflowType?: string
    cleanRemoveStatus?: boolean
    deviceId: string
    name: string
}

export interface CabinetUpdateProperty {
    id?: number
    title: string
    garbageId?: number
    overflowType?: string
    cleanRemoveStatus?: boolean
    deviceId: string
    name: string
}

export interface CabinetDeleteProperty {
    id?: number
    title?: string
    garbageId?: number
    overflowType?: string
    cleanRemoveStatus?: boolean
    deviceId?: string
    name?: string
}


// Drawer
export interface Drawer {
    id: string
    no: number
    title: string
    name: string
    deviceId: string
    cabinetId: number
    fileName: string
    createdAt: number
    updatedAt: number
}

export interface DrawerSelectProperty {
    id?: string
    no?: number
    title?: string
    name?: string
    deviceId?: string
    cabinetId?: number
    fileName?: string
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface DrawerInsertProperty {
    id: string
    no?: number
    title?: string
    name?: string
    deviceId: string
    cabinetId: number
    fileName: string
}

export interface DrawerUpdateProperty {
    id?: string
    no: number
    title?: string
    name?: string
    deviceId: string
    cabinetId: number
    fileName: string
}

export interface DrawerDeleteProperty {
    id?: string
    no?: number
    title?: string
    name?: string
    deviceId?: string
    cabinetId?: number
    fileName?: string
}


// Verification
export interface Verification {
    id: number
    deviceId: string
    verificationCode: string
    cabinetId: number
    toolId: number
    workOrderId: number
    drawerId: string
    optCode: string
    startTs: number
    stopTs: number
    isUsed: boolean
    createdAt: number
    updatedAt: number
    isDelete: boolean
}

export interface VerificationSelectProperty {
    id?: number
    deviceId: string
    verificationCode?: string
    cabinetId?: number
    workOrderId?: number
    toolId?: number
    drawerId?: string
    optCode?: string
    startTs?: number
    stopTs?: number
    isUsed?: boolean
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
    username?:string
    time?:number
}

export interface VerificationInsertProperty {
    id?: number
    touser?: string
    deviceId: string
    verificationCode?: string
    toolId?: number
    toolIds?: string
    cabinetId?: number
    workOrderId?: number
    drawerId?: string
    optCode?: string
    startTs?: number
    stopTs?: number
    time: number
    isUsed?: boolean
    phoneNo?: string
    username?:string
    content?:string
    onShelf?:number
}

export interface VerificationUpdateProperty {
    id: number
    deviceId?: string
    verificationCode?: string
    cabinetId?: number
    workOrderId?: number
    drawerId?: string
    optCode?: string
    toolId?: number
    startTs?: number
    stopTs?: number
    isUsed?: boolean
}

export interface VerificationDeleteProperty {
    id?: number
    deviceId?: string
    isDelete?: boolean
    verificationCode?: string
    optCode?: string
    cabinetId?: number
    workOrderId?: number
    toolId?: number
    drawerId?: string
    startTs?: number
    stopTs?: number
    isUsed?: boolean
}


// AndroId
export interface AndroId {
    id: string
    name: string
    supplier: string
    host: string
    model: string
    version: string
    size: string
    buyDate: {}
    curPageNo: number
    pageSize: number
    createdAt: number
    updatedAt: number
}

export interface AndroIdSelectProperty {
    id?: string
    name?: string
    supplier?: string
    host?: string
    model?: string
    version?: string
    size?: string
    buyDate?: {}
    curPageNo?: number
    pageSize?: number
    startAt?: number
    endAt?: number
}

export interface AndroIdInsertProperty {
    id: string
    name?: string
    supplier?: string
    host?: string
    model?: string
    version?: string
    size?: string
    buyDate?: {}
}

export interface AndroIdUpdateProperty {
    id: string
    name?: string
    supplier?: string
    host?: string
    model?: string
    version?: string
    size?: string
    buyDate?: {}
}

export interface AndroIdDeleteProperty {
    id?: string
    name?: string
    supplier?: string
    host?: string
    model?: string
    version?: string
    size?: string
    buyDate?: {}
}


// DeviceType
export interface DeviceType {
    id: number
    name: string
    kind: string
    type: string
    image: string
    companyId: number
    groupId: number
    createdAt: number
    updatedAt: number
}

export interface DeviceTypeSelectProperty {
    id?: number
    name?: string
    kind?: string
    type?: string
    image?: string
    pageSize?: number
    companyId?: number
    groupId?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface DeviceTypeInsertProperty {
    id?: number
    image?: string
    companyId?: number
    groupId?: number
    name: string
    kind: string
    type: string
}

export interface DeviceTypeUpdateProperty {
    id: number
    image?: string
    companyId?: number
    groupId?: number
    name?: string
    kind?: string
    type?: string
}

export interface DeviceTypeDeleteProperty {
    id?: number
    image?: string
    companyId?: number
    groupId?: number
    name?: string
    kind?: string
    type?: string
}


// DeviceTypeCompany
export interface DeviceTypeCompany {
    id: number
    companyId: number
    type: string
    name: string
    createdAt: number
    updatedAt: number
}

export interface DeviceTypeCompanySelectProperty {
    id?: number
    type?: string
    companyId?: number
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface DeviceTypeCompanyInsertProperty {
    id?: number
    type: string
    companyId: number
}

export interface DeviceTypeCompanyUpdateProperty {
    id: number
    type?: string
    companyId?: number
}

export interface DeviceTypeCompanyDeleteProperty {
    id?: number
    type?: string
    companyId?: number
}


// AttributeName
export interface AttributeName {
    id: number
    attribute: string
    name: string
    type: number
    createdAt: number
    updatedAt: number
}

export interface AttributeNameSelectProperty {
    id?: number
    attribute?: string
    name?: string
    type?: number
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface AttributeNameInsertProperty {
    id?: number
    attribute: string
    name: string
    type?: number

}

export interface AttributeNameUpdateProperty {
    id: number
    attribute?: string
    name?: string
    type?: number
}

export interface AttributeNameDeleteProperty {
    id?: number
    attribute?: string
    name?: string
    type?: number
}


// IoType
export interface IoType {
    id: number
    name: string
    type: number
}

export interface IoTypeSelectProperty {
    id?: number
    name?: string
    type?: number
    pageSize?: number
    curPageNo?: number
    startAt?: number
    endAt?: number
}

export interface IoTypeInsertProperty {
    id?: number
    name: string
    type: number
}

export interface IoTypeUpdateProperty {
    id: number
    name?: string
    type?: number
}

export interface IoTypeDeleteProperty {
    id?: number
    name?: string
    type?: number
}


export enum NetType {
    internet='internet', // 外网
    intranet='intranet'  // 内网
}

export enum Version {
    v33='v33', //3.3
    v4='v4',   // 4
    v501='v501', // 5.0.1
    v502='v502', // 5.0.2
    v510='v510', // 5.1
}

// 设备类型 【gm,rfid,cd,ck】
export enum DeviceMode {
    gm='gm',//光敏柜 光敏车
    rfid='rfid',//rfid柜 rfid车
    cd='cd',//充电柜
    ck='ck',//智能仓库
    bjk='bjk',//宁德核电类型的备件库
    sale='sale', // 喜利得售卖柜
}

// 终端类型
export enum TerminalType {
    server='server',   //服务器
    readonly='readonly', //只读
    login='login',    //登录模块
    /// 读取平台
    readPlatform='readPlatform',
}

export interface LoginType {
    enableCard: boolean
    enableFinger: boolean
    enableFace: boolean
    enableAccount: boolean
}

export enum MachineType {
    none='none',
    x64='none',
    arm='none',
}

export enum SensorType {
    card='card',
    finger='finger',
    face='face',
    photosensitive='photosensitive',//光敏
    rfid='rfid',
    charge='charge',
    io='io',
    weight='weight'
}

export enum KeyBoard {
    default='default'  ,
    diy='diy'
}

export enum CabinetType {
    drawer='drawer',//抽屉式
    cabinet='cabinet',//柜式
    ck='ck',//仓库式
    mixin='mixin',//混合式
    gmcw='gmcw',//光敏储物柜
    charge='charge',//充电柜
    sell='sell',//售卖柜
    trolleyCase='trolleyCase',//拉杆箱
    keysCabinet='keysCabinet',//钥匙柜
    jdCabinet='jdCabinet'//京东资料柜
}

export enum ScreenType {
    none='none',
    android_21_5 ='android_21_5',
    android_15_6 ='android_15_6',
    android_11_6 ='android_11_6',
    android_10_1='android_10_1',
    common_7='common_7',
}

export enum IoModuleType {
    di='di',
    do='do',
    dio='dio'
}

export interface TerminalBasicConfig {
    loginType: LoginType
    terminalType: TerminalType // 终端类型
    cabinetType: CabinetType // 柜体形式
    ip: string // TODO: 马晓鹏 需要正则验证
    mac: string //TODO: 马晓鹏 需要正则验证
    androidId: string //TODO: 马晓鹏 需要正则验证
    screenType: ScreenType //TODO: liliang 3代遗留
    machineType: MachineType //主机类型
    sensorType: SensorType //传感类型
    keyBoard: KeyBoard //键盘类型
    checkLoginRight: boolean //是否需要登录鉴权
    cardPasswordNeeded: boolean //刷卡是否需要输入密码
}

export enum PortType {
    net='net',
    serialport ='serialport'
}

// 传感器配置
export interface SensorConf {
    enable: boolean//是否启用
    sensorType: SensorType,
    portType: PortType
    host: string,//
    port: number,//
    station: number,//站号
}

// Io配置
export interface IoConf extends SensorConf {
    ioModuleType: IoModuleType
}

// 充电器配置
export interface ChargerConf extends SensorConf {
    enableUserCheck: boolean
}

// 人脸配置
export interface FaceConf {
    enable: boolean //是否启用
    arcFaceActiveCode: string,//虹软人脸增值版激活码
}

export interface CardOptions {
    fun: string
    host: string,
    port: number,
    stationArr: number[],
    switch: boolean,
}

export interface RabbitOptions {
    host: string
    port: number
    username: string
    password: string
    exchangeName: string
}

export interface NqOption {
    serialNo: string  // 纳奇序列号
    host: string
    port: number
    // enableCard:boolean
    // enableFinger:boolean
    // enableFace:boolean
}

/// 以便后期扩展用安卓配置
export interface AndroidOptions {
    headerImageUrl: string | undefined
    splashImageUrl: string | undefined
    cardImageUrl: string | undefined
    fingerImageUrl: string | undefined
    faceImageUrl: string | undefined
    logoImageUrl: string | undefined
}

export interface Terminal {
    deviceId?: string    //设备号
    tid?: number //终端号
    mac?: string //mac地址
    androidId?: string // androidId
    terminalId?:number // 终端id
    terminalName?:string
    rabbitTid?:number
    deviceType?:number
    androidOptions?: AndroidOptions // 安卓配置
    mode?: DeviceMode  //设备类型 TODO: liliang 需要规划好
    terminalType?: TerminalType /// TODO: liliang 需要规划好
    // type:string //3代遗留 即将废弃
    // keyboard_show:string //3代遗留 即将废弃
    // machine: string //未知
    // arcFaceActiveCode: string //人脸激活号 TODO: liliang 这里要废弃 移到terminal.faces里面
    basicConfig?: TerminalBasicConfig // 基本配置信息
    rabbitOptions?: RabbitOptions //rabitmq配置
    // 以下为模块配置信息
    nqOptions?: NqOption[] // 纳奇配置 仓库三合一门禁使用此参数
    cards?: SensorConf[];    //刷卡器配置集
    fingers?: SensorConf[]   //指纹模块配置集
    faces?: FaceConf[]    //usb 不用配置
    gms?: SensorConf[]   //光敏模块配置
    rfidModules?: SensorConf[] //rfid模块配置
    ioModules?: IoConf[] //输入输出配置集
    // gpios?:SensorConf[]    //暂时不用
    chargers?: [] //充电配置集
    printers?: [] //打印机配置
    ths?: []  //未知
}

export interface DeviceConf {
    deviceId?: string
    deviceName?: string
    netType?: NetType
    version?: Version
    address?: string
    terminals?: Terminal[]
}

export class LocationEmptyCabinetProperty {
    type?: string;
}

export function Dc(service: any, isDebugMode: boolean = false) {
    return {
		content: new Request<Content, ContentInsertProperty, ContentDeleteProperty, ContentUpdateProperty, ContentSelectProperty>('/dc/content', service, isDebugMode),
		province: new Request<Province, ProvinceInsertProperty, ProvinceDeleteProperty, ProvinceUpdateProperty, ProvinceSelectProperty>('/dc/province', service, isDebugMode),
		city: new Request<City, CityInsertProperty, CityDeleteProperty, CityUpdateProperty, CitySelectProperty>('/dc/city', service, isDebugMode),
		area: new Request<Area, AreaInsertProperty, AreaDeleteProperty, AreaUpdateProperty, AreaSelectProperty>('/dc/area', service, isDebugMode),
		village: new Request<Village, VillageInsertProperty, VillageDeleteProperty, VillageUpdateProperty, VillageSelectProperty>('/dc/village', service, isDebugMode),
		building: new Request<Building, BuildingInsertProperty, BuildingDeleteProperty, BuildingUpdateProperty, BuildingSelectProperty>('/dc/building', service, isDebugMode),
		family: new Request<Family, FamilyInsertProperty, FamilyDeleteProperty, FamilyUpdateProperty, FamilySelectProperty>('/dc/family', service, isDebugMode),
        // class
        location: new Request<Location, LocationInsertProperty, LocationDeleteProperty, LocationUpdateProperty, LocationSelectProperty>('/dc/location', service, isDebugMode),
        group: new Request<Group, GroupInsertProperty, GroupDeleteProperty, GroupUpdateProperty, GroupSelectProperty>('/dc/group', service, isDebugMode),
        company: new Request<Company, CompanyInsertProperty, CompanyDeleteProperty, CompanyUpdateProperty, CompanySelectProperty>('/dc/company', service, isDebugMode),
        department: new Request<Department, DepartmentInsertProperty, DepartmentDeleteProperty, DepartmentUpdateProperty, DepartmentSelectProperty>('/dc/department', service, isDebugMode),
        device: new Request<Device, DeviceInsertProperty, DeviceDeleteProperty, DeviceUpdateProperty, DeviceSelectProperty>('/dc/device', service, isDebugMode),
        team: new Request<Team, TeamInsertProperty, TeamDeleteProperty, TeamUpdateProperty, TeamSelectProperty>('/dc/team', service, isDebugMode),
        charger: new Request<Charger, ChargerInsertProperty, ChargerDeleteProperty, ChargerUpdateProperty, ChargerSelectProperty>('/dc/charger', service, isDebugMode),
        ioAttr: new Request<IoAttr, IoAttrInsertProperty, IoAttrDeleteProperty, IoAttrUpdateProperty, IoAttrSelectProperty>('/dc/ioAttr', service, isDebugMode),
        io: new Request<Io, IoInsertProperty, IoDeleteProperty, IoUpdateProperty, IoSelectProperty>('/dc/io', service, isDebugMode),
        io_type: new Request<IoType, IoTypeInsertProperty, IoTypeDeleteProperty, IoTypeUpdateProperty, IoTypeSelectProperty>('/dc/io_type', service, isDebugMode),
        cabinet: new Request<Cabinet, CabinetInsertProperty, CabinetDeleteProperty, CabinetUpdateProperty, CabinetSelectProperty>('/dc/cabinet', service, isDebugMode),
        drawer: new Request<Drawer, DrawerInsertProperty, DrawerDeleteProperty, DrawerUpdateProperty, DrawerSelectProperty>('/dc/drawer', service, isDebugMode),
        verification: new Request<Verification, VerificationInsertProperty, VerificationDeleteProperty, VerificationUpdateProperty, VerificationSelectProperty>('/dc/verification', service, isDebugMode),
        android: new Request<AndroId, AndroIdInsertProperty, AndroIdDeleteProperty, AndroIdUpdateProperty, AndroIdSelectProperty>('/dc/androId', service, isDebugMode),
        device_type: new Request<DeviceType, DeviceTypeInsertProperty, DeviceTypeDeleteProperty, DeviceTypeUpdateProperty, DeviceTypeSelectProperty>('/dc/device_type', service, isDebugMode),
        device_type_company: new Request<DeviceTypeCompany, DeviceTypeCompanyInsertProperty, DeviceTypeCompanyDeleteProperty, DeviceTypeCompanyUpdateProperty, DeviceTypeCompanySelectProperty>('/dc/device_type_company', service, isDebugMode),
        attributeName: new Request<AttributeName, AttributeNameInsertProperty, AttributeNameDeleteProperty, AttributeNameUpdateProperty, AttributeNameSelectProperty>('/dc/attributeName', service, isDebugMode),
        // function
        getVersion: () => mewRequest('/dc/select/version', {}, 'POST', service, isDebugMode),
        deviceSelectChange: (json: DeviceSelectProperty) => mewRequest('/device/list_drawer_id/', json, 'GET', service, isDebugMode),
        // 代码逻辑过于乱即将废弃
        selectTeamBelong: (json: TeamBelongSelectProperty) => mewRequest('/dc/team/belong/select', json, 'POST', service, isDebugMode),
        password: (json: VerificationInsertProperty) => mewRequest('/dc/verification/password', json, 'POST', service, isDebugMode),
        getEmptyCabinet: (json: LocationGetEmptyCabinetProperty) => mewRequest('/dc/location/get_empty_cabinet', json, 'POST', service, isDebugMode),
    }
}
