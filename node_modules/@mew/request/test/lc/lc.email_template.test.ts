import axios from "axios";
import {AuthData} from "../../src/ms/mc";
import {Mc, Lc} from "../../src/main";
import {CompanyInsertProperty} from "../../src/ms/dc";

const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let lc

describe('dc', () => {
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        lc = Lc(service)
    })

    test('email_template表删除邮件模板',async () => {
        async function delData(json) {
            const res = lc.email_template.delete(json)
            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBeGreaterThanOrEqual(0)
        }
        await delData({id:1})
        await delData({id:2})
        await delData({id:3})
    },2000)

    test('email_template表插入邮件模板',async () => {
        async function insertData(json) {
            const res = await lc.email_template.insert(json)
            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBe(1)

            let email_template = res.data[0]

            expect(email_template.mainTitle).toBe(json.mainTitle)
            expect(email_template.bottomDesc).toBe(json.bottomDesc)
            expect(email_template.params).toBe(json.params)
            expect(email_template.paramsCh).toBe(json.paramsCh)
            expect(email_template.title).toBe(json.title)
            expect(email_template.emailTitle).toBe(json.emailTitle)
            expect(email_template.id).toBe(json.id)
        }
        const res = await lc.lc.email_template.insert({mainTitle: "BOSCH"})
        if (res.total == 0) {
            await insertData({
                mainTitle: "BOSCH",
                bottomDesc: "反馈原因：工具在使用中损坏，为了不延误工期，请尽快更换！",
                params: "deviceId,deviceName,username,itemName,itemNo,itemLocation,feedbackType",
                paramsCh: "设备号,设备名称,用户名,物料名称,物料编号,物料库位,反馈类型",
                title: "问题反馈",
                emailTitle: "非常重视您的体验反馈",
                id: 1})  //问题反馈邮件模板
            await insertData({
                mainTitle: "BOSCH",
                bottomDesc: "请尽快前往补货！",
                params: "deviceId,deviceName,itemName,itemNo,itemLocation,shelvesNum",
                paramsCh: "设备号,设备名称,物料名称,物料编号,物料库位,当前库存",
                title: "库存不足",
                emailTitle: "非常重视您的体验反馈",
                id: 2})  //库存不足邮件模板
            await insertData({
                mainTitle: "BOOHER",
                params: "deviceId,deviceName,username,itemName,itemNo,itemLocation,Num",
                paramsCh: "设备号,设备名称,用户名,物料名称,物料编号,物料库位,补货数量",
                title: "补货成功",
                emailTitle: "非常重视您的体验反馈",
                id: 3})  //补货成功邮件模板
        }
    },2000)

    test('email_template表更新id=3的邮件模板',async () => {
        const json = {id:3, mainTitle: "BOSCH"}
        const res = await lc.email_template.update(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.mainTitle).toBe(json.mainTitle)
    },2000)

    test('发送模板邮件',async () => {
        async function send_email(json) {
            const res = await lc.email_template.sendEmail(json)
            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBe(1)
        }
        await send_email({
            email: "1159698384@qq.com, 2575993721@qq.com",
            templateId: 1,
            data: [
                {
                    "deviceId": "052111001",
                    "deviceName": "宁德核电",
                    "username": "陈志龙",
                    "itemName": "测试物料名称",
                    "itemNo": "123125",
                    "itemLocation": "A01-01",
                    "feedbackType": "磨损"
                },
                {
                    "deviceId": "011804001",
                    "deviceName": "测试设备1",
                    "username": "cs40",
                    "itemName": "测试物料名称",
                    "itemNo": "123125",
                    "itemLocation": "A01-01",
                    "feedbackType": "磨损"
                }
            ]
        })  //模板一给不同用户发送多行
        await send_email({
            email: "1159698384@qq.com, 2575993721@qq.com",
            templateId: 2,
            data: [
                {
                    "deviceId": "052111001",
                    "deviceName": "宁德核电",
                    "itemName": "测试物料名称",
                    "itemNo": "213123",
                    "itemLocation": "A01-01",
                    "shelvesNum": "1"
                }
            ]
        })  //模板二给不同用户发送单行
        await send_email({
            email: "1159698384@qq.com",
            templateId: 3,
            data: [
                {
                    "deviceId": "052111001",
                    "deviceName": "宁德核电",
                    "username": "陈志龙",
                    "itemName": "测试物料12",
                    "itemNo": "01231245",
                    "itemLocation": "A01-10",
                    "Num": "12"
                }
            ]
        })  //模板三给单个用户发送一行内容
        await send_email({
            email: "1159698384@qq.com",
            templateId: 3,
            data: [
                {
                    "deviceId": "052111001",
                    "deviceName": "宁德核电",
                    "username": "陈志龙",
                    "itemName": "测试物料12",
                    "itemNo": "01231245",
                    "itemLocation": "A01-10",
                    "Num": "12"
                },
                {
                    "deviceId": "052111001",
                    "deviceName": "宁德核电",
                    "username": "没有这个名字",
                    "itemName": "测试物料名称",
                    "itemNo": "3214325436",
                    "itemLocation": "A01-01",
                    "Num": "1"
                }
            ]
        })  //模板三给单个用户发送一行内容
    },2000)
})