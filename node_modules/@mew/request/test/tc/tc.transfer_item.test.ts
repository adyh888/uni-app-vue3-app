import {AuthData, Mc} from "../../src/ms/mc";
import axios from "axios";
import {Tc} from "../../src/main";
import {
    RfidDeleteProperty,
    TransferInsertProperty, TransferItemInsertBatchProperty,
    TransferItemSelectProperty,
    TransferSelectProperty
} from "../../src/ms/tc";

const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let tc

describe('tc.transfer_item', () => {
    const id =1
    const deviceId = '022111001'

    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        tc = Tc(service)
    })

    test('transfer_item表删除',async () => {
        const res = await tc.transfer_item.delete({id})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(0)
    },2000)

    test('transfer_item表增加',async () => {
        const json:TransferItemInsertBatchProperty = {id, toolArr: [1], isPutIn: false, quantity: 1, transferId: 1}
        const res = await tc.transfer_item.insert(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
    },2000)

    test('transfer_item表修改',async () => {
        const json = {id, isPutIn: true}
        const res = await tc.transfer_item.update(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].isPutIn).toBe(json.isPutIn)
    },2000)

    test('transfer_item表查询',async () => {
        const res = await tc.transfer_item.select({id})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(1)
    },2000)

    test('transfer_item表按是否归还查询',async () => {
        const json:TransferItemSelectProperty = {isPutIn: true, curPageNo: 1, pageSize:1}
        const res = await tc.transfer_item.select(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].isPutIn).toBe(json.isPutIn)
    },2000)
})
