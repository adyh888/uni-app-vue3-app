import {AuthData, Mc} from "../../src/ms/mc";
import axios from "axios";
import {AxiosEnv, Tc} from "../../src/main";
import {PartInsertProperty, PartSelectProperty, PartUpdateProperty, RfidDeleteProperty} from "../../src/ms/tc";

const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let tc

describe('tc.part', () => {
    const id =1
    const deviceId = '022111001'

    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        tc = Tc(service)
    })

    test('part表删除',async () => {
        const res = await tc.part.delete({id})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(0)
        // expect(res.data[0].id).toBe(1)
    },2000)

    test('part表增加',async () => {
        const json:PartInsertProperty = {desc: "", num: 0, id, itemNo: "1", deviceId,  preInspectionStatus: 0}
        const res = await tc.part.insert(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].itemNo).toBe(json.itemNo)
        expect(res.data[0].deviceId).toBe(json.deviceId)
        expect(res.data[0].preInspectionStatus).toBe(json.preInspectionStatus)
    },2000)

    test('part表修改',async () => {
        const json:PartUpdateProperty = {desc: "", itemNo: "", num: 0, id, preInspectionStatus: 1}
        const res = await tc.part.update(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].preInspectionStatus).toBe(json.preInspectionStatus)
    },2000)

    test('part表查询',async () => {
        const res = await tc.part.select({id})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(1)
    },2000)

    test('part表按预检状态查询',async () => {
        const json:PartSelectProperty = {preInspectionStatus: 1, curPageNo: 1, pageSize:1}
        const res = await tc.part.select(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].preInspectionStatus).toBe(json.preInspectionStatus)
    },2000)
})
