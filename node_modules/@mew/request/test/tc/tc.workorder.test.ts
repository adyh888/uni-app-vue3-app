import axios from "axios";
import {Tc, WorkOrderInsertProperty, WorkOrderSelectProperty, WorkOrderUpdateProperty} from "../../src/ms/tc";
import {AuthData, Mc} from "../../src/ms/mc";
import {AxiosEnv} from "../../src/main";
import {deviceId} from "../../../../booher.ndhd.xcx.uniapp/config/config";

const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let tc

describe('workorder',()=>{
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        tc = Tc(service)
    })

    test('workorder表查询', async() => {
        const json= {"deviceId":"052111001","companyId":10816,"pageSize":10,"curPageNo":1}
        const res = await tc.workorder.select(json)
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        // expect(res.data[0].id).toBe(json.id)
        expect(res.data.length).toBeGreaterThan(0)
    },5000)

    test('workorder表删除',async () => {
        const res = await tc.workorder.delete({id:1})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(0)
        // expect(res.data[0].id).toBe(1)
    },2000)

    test('workorder表增加',async () => {
        const json:WorkOrderInsertProperty = {id:1, deviceId, uid: 1, workorderNo: '1', status: 0, deadline: 1648099950605}
        const res = await tc.workorder.insert(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].uid).toBe(json.uid)
        expect(res.data[0].workorderNo).toBe(json.workorderNo)
        expect(res.data[0].status).toBe(json.status)
        expect(res.data[0].deadline).toBe(json.deadline)
    },2000)

    test('workorder表修改',async () => {
        const json:WorkOrderUpdateProperty = {id:1, status: 1}
        const res = await tc.workorder.update(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].status).toBe(json.status)
    },2000)

    test('workorder表查询',async () => {
        const res = await tc.workorder.select({id:1})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(1)
    },2000)

    test('workorder表按状态查询',async () => {
        const json:WorkOrderSelectProperty = {status: 1, curPageNo: 1, pageSize:1}
        const res = await tc.workorder.select(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].status).toBe(json.status)
    },2000)
})
