import {AuthData, Mc} from "../../src/ms/mc";
import axios from "axios";
import {AxiosEnv, Tc} from "../../src/main";
import {ToolInsertProperty, ToolSelectProperty, ToolUpdateProperty} from "../../src/ms/tc";

const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let tc

describe('tc', () => {
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        tc = Tc(service)
    })

    const id = 1, deviceId = '022111001', drawerId = '02211100101', location = 'A01-01'
    test('查询tc版本号', async () => {
        const res = await tc.getVersion()
        console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
    }, 2000)

    test('tool表删除id=1的工具', async () => {
        // const json: ToolDeleteProperty = {id: 2}
        const res = await tc.tool.delete({id})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(0)
        // expect(res.data[0].id).toBe(1)
    }, 2000)

    test('tool表删除id=2的工具', async () => {
        // const json: ToolDeleteProperty = {id: 2}
        const res = await tc.tool.delete({id: 2})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(0)
    }, 2000)

    test('tool表增加工具', async () => {
        const json: ToolInsertProperty = {id, deviceId, drawerId, location, partDes: '测试工具名称', status: false}
        const res = await tc.tool.insert(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].deviceId).toBe(json.deviceId)
        expect(res.data[0].drawerId).toBe(json.drawerId)
        expect(res.data[0].location).toBe(json.location)
    }, 2000)

    test('tool表增加id=2的工具', async () => {
        const json: ToolInsertProperty = {id: 2, deviceId, drawerId, location: 'A01-02', partDes: '测试工具名称0', status: false}
        const res = await tc.tool.insert(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].deviceId).toBe(json.deviceId)
        expect(res.data[0].drawerId).toBe(json.drawerId)
        expect(res.data[0].location).toBe(json.location)
    }, 2000)

    test('tool表修改工具', async () => {
        const json: ToolUpdateProperty = {id: 2, partDes: '测试工具名称1', status: true}
        const res = await tc.tool.update(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
    }, 2000)

    test('tool表按工具名称查询', async () => {
        const json: ToolSelectProperty = {deviceId, partDes: '测试工具名称1', curPageNo: 1, pageSize: 1}
        const res = await tc.tool.select(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(1)
        expect(res.data[0].partDes).toBe(json.partDes)
    }, 2000)

    test('tool表按状态查询', async () => {
        const json: ToolSelectProperty = {deviceId, status: true, curPageNo: 1, pageSize: 1}
        const res = await tc.tool.select(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(1)
        expect(res.data[0].status).toBe(json.status)
    }, 2000)

    test('tool表按设备号查询', async () => {
        const json: ToolSelectProperty = {deviceId, curPageNo: 1, pageSize: 1}
        const res = await tc.tool.select(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(1)
        expect(res.data[0].deviceId).toBe(json.deviceId)
    }, 2000)

    test('tool表查询不存在的工具', async () => {
        const json: ToolSelectProperty = {deviceId, id: 10000, curPageNo: 1, pageSize: 1}
        const res = await tc.tool.select(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(0)
    }, 2000)

    // test('tool表批量增加工具',async() => {
    //     const json7:ToolInsertBatchProperty = {deviceId, drawerNo: 1, drawerItemNum: 2}
    //     const res = await tc.tool.insert.batch(json7)
    //     expect(res.code).toBe(0)
    //     expect(res.msg).toBe('success')
    //     expect(res.data.length).toBeGreaterThanOrEqual(1)
    //     expect(res.data[0].deviceId).toBe(json7.deviceId)
    //     expect(res.data[0].drawerNo).toBe(json7.drawerNo)
    //     expect(res.data[0].drawerItemNum).toBe(json7.drawerItemNum)
    //     },2000)

    // test('tool表批量更新工具状态', async() => {
    //     const json8 = {
    //         toolArr: [
    //           {
    //             toolId: 1,
    //             status: 0,
    //             description: "这是描述"
    //           },
    //           {
    //             toolId: 2,
    //             status: 1,
    //             description: "这是描述1"
    //           }
    //         ]
    //       }
    //     const res = await tc.tool.updateToolStatus(json8)
    //     expect(res.code).toBe(0)
    //     expect(res.msg).toBe('success')
    //     expect(res.data.length).toBeGreaterThanOrEqual(1)
    //     expect(res.data[0].toolId).toBe(json8.toolArr.toolId)
    //     expect(res.data[0].status).toBe(json8.toolArr.status)
    //     },2000)

    // test('tool_type删除',async() => {
    //     const res = await tc.tool.delete({id})
    //     expect(res.code).toBe(0)
    //     expect(res.msg).toBe('success')
    //     expect(res.data.length).toBe(1)
    //     expect(res.data[0].id).toBe(1)
    // },2000)
    //
    // test('tool_type增加',async() => {
    //     const json9 = {id, typeName: '工具种类', isDisable: true}
    //     const res = await tc.tool_type.insert(json9)
    //     expect(res.code).toBe(0)
    //     expect(res.msg).toBe('success')
    //     expect(res.data.length).toBe(1)
    //     expext(res.data[0].typeName).toBe(json.typeName)
    // },2000)
    //
    // const json = {id, typeName: '工具种类1', isDisable: false}
    // test('tool_type修改',async() => {
    //     const res = await tc.tool_type.update(json)
    //     expect(res.code).toBe(0)
    //     expect(res.msg).toBe('success')
    //     expect(res.data.length).toBe(1)
    //     expect(res.data[0].typeName).toBe(json.typeName)
    //     expect(res.data[0].isDisable).toBe(json.isDisable)
    // },2000)
    //
    // test('tool_type查询',async() => {
    //     const res = await tc.tool_type.select({id})
    //     expect(res.code).toBe(0)
    //     expect(res.msg).toBe('success')
    //     expect(res.data.length).toBe(1)
    //     expect(res.data[0].typeName).toBe(json.typeName)
    //     expect(res.data[0].isDisable).toBe(json.isDisable)
    // },2000)
    //
    // test('tool_type按类别名称查询',async() => {
    //     const json = {typeName: '工具种类1', curPageNo: 1, pageSize: 1}
    //     const res = await tc.tool_type.select({id})
    //     expect(res.code).toBe(0)
    //     expect(res.msg).toBe('success')
    //     expect(res.data.length).toBe(1)
    //     expect(res.data[0].typeName).toBe(json.typeName)
    // },2000)
    //
    //     const json = {isDisable: false, curPageNo: 1, pageSize: 1}
    //     const res = await tc.tool_type.select({id})
    //     expect(res.code).toBe(0)
    //     expect(res.msg).toBe('success')
    //     expect(res.data.length).toBe(1)
    //     expect(res.data[0].isDisable).toBe(json.isDisable)
    // },2000)
    //
    // test('tool_type查询不存在的数据',async() => {
    //     const json = {isDisable: true, curPageNo: 1, pageSize: 1}
    //     const res = await tc.tool_type.select({id})
    //     expect(res.code).toBe(0)
    //     expect(res.msg).toBe('success')
    //     expect(res.data.length).toBe(0)
    // },2000)
})
