import axios, {AxiosInstance} from "axios";
import {DingTalk, Mc} from "../../src/main";
import {dateFormat, sleep} from "../../src/utils/utils";

export interface AuthProperty {
    username: string;
    password: string;
}

//auth
export interface AuthData {
    access_token: string
    expiration: number
    overdueDateTs: number
    overdueDate: string
}

const service = axios.create({
    baseURL: 'https://api.mew-iot.cn',
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})

const mc = Mc(service)
console.log(34,dateFormat("HH:mm",new Date()))

/**
 * 提供基础数据
 */
describe.skip('dingtalk',()=>{
    let dd:DingTalk
    beforeAll(async()=>{
        const appId = '5000000002334316' // 钉钉企业第三方应用-智能配发柜
        dd = new DingTalk(appId,service)
        await sleep(2000)
        // console.log(35, dd._access_token)
    })
    const username = 'test'
    const workorder = new Date().getTime().toString()

    test('发送钉钉模板消息-备品上架通知', async () => {
        const data = {
            username,
            workorder
        }
        const userid_list = 'manager333,01225323424237773034'
        const res = await dd.sendTemplateMsgOnShelf(userid_list, data)
        // console.log(15, res)
    }, 3000)

    test('发送钉钉模板消息-备品预检通知', async () => {
        const data = {
            username,
            workorder
        }
        const userid_list = 'manager333,01225323424237773034'
        const res = await dd.sendTemplateMsgPreInspection(userid_list, data)
        // console.log(15, res)
    }, 2000)

    test('发送钉钉模板消息-备品换货通知', async () => {
        const data = {
            username,
            workorder
        }
        const userid_list = 'manager333,01225323424237773034'
        const res = await dd.sendTemplateMsgChange(userid_list, data)
        // console.log(15, res)
    }, 2000)

    test('发送钉钉模板消息-备品领用通知', async () => {
        const data = {
            username,
            workorder
        }
        const userid_list = 'manager333,01225323424237773034'
        const res = await dd.sendTemplateMsgPickUp(userid_list, data)
        // console.log(15, res)
    }, 2000)

    test('发送钉钉模板消息-备品退销通知', async () => {
        const data = {
            username,
            workorder
        }
        const userid_list = 'manager333,01225323424237773034'
        const res = await dd.sendTemplateMsgReturn(userid_list, data)
        // console.log(15, res)
    }, 2000)
    test('getDingTalkUserInfo', async () => {

        const data = {
            code:"dab8ae40affc3befa57030dae13828ac",
            username,
            workorder
        }
        const userid_list = 'manager333,01225323424237773034'
        const res = await dd.sendTemplateMsgReturn(userid_list, data)
        // console.log(15, res)
    }, 2000)


    // test.skip('获取部门信息', async () => {
    //     const res = dd.getDepartmentList(assess_token)
    //     console.log(res)
    // }, 2000)
})
