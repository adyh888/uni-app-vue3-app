import axios from "axios";
import {AuthData} from "../../src/ms/mc";
import {Mc, Dc, Ac} from "../../src/main";
import {CompanyInsertProperty, VerificationSelectProperty} from "../../src/ms/dc";

const baseURL = 'https://api.mew-iot.cn'
const BaseURL = 'http://www.mew-iot.cn:51000'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let ac
let dc



// describe('根据 unionid 获取用户信息', () => {
//     beforeAll(async () => {
//         // const res = await mc.getDingTalkUserInfo('','')
//         // console.log(res)
//         // if (res.data.findIndex(item => item.name == groupName) == -1) {
//         //     await dc.group.insert({name: groupName, province: '福建', city: '宁德'})
//         // }
//     })
//     // test(`getDingTalkUserInfo ok`, async () => {
//     //     const res = await uc.wx_user.select({
//     //         unionid:'oU7Oc0XUkdAQkFBFh74_E7UiIa6M'
//     //     })
//     //     console.log(res)
//     //     expect(res.code).toBe(0)
//     // }, 2000)
//     test(`user unionid ok`, async () => {
//         // uc.user
//         const res = await uc.user.select({
//             unionid:'o3SqR5eLnxS5HRIm83KKShTzbSWg'
//         })
//         console.log(res)
//         expect(res.code).toBe(0)
//         expect(res.data.length).toBe(0)
//     }, 2000)
//
//     test(`dc/device/find/android ok`, async () => {
//         const res = await dc.device.find({
//             androidId:'8c3539b7a81e4861'
//         })
//         console.log(res)
//         expect(res.code).toBe(0)
//     }, 2000)
//
// })
//
// })

describe('验证开箱码，获得需要的相应柜门',()=>{
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        ac = Ac(service)
        dc = Dc(service)
    })
    test('dc/verfication/select',async () => {
        const json:VerificationSelectProperty = {deviceId: '042011009', verificationCode: '1093'}
        const res = await dc.verificationCode.select({json})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data[0].tool.location.length).toBe(1)
        expect(res.data[0].deviceId).toBe(json.deviceId)
        expect(res.data[0].verificationCode).toBe(json.verificationCode)
    },2000)
})