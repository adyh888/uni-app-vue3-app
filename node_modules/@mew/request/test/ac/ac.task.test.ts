import {AuthData, Mc} from "../../src/ms/mc";
import axios from "axios";
import {Ac, TaskInsertProperty, TaskSelectProperty, TaskUpdateProperty} from "../../src/ms/ac";

// const baseURL = 'https://api.mew-iot.cn'
const baseURL = 'http://www.mew-iot.cn:51000'


let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})

let authData:AuthData
let ac

describe('ac.task',()=>{
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        ac = Ac(service)
    })

    const id = 1

    test('task select', async() => {
        const json = {"uid":5214,"status":0}
        const res = await ac.task.select(json)
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
    },2000)

    test('task表删除', async () => {
        const res = await ac.task.delete({id})
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(0)
    }, 2000)

    test('task表增加', async () => {
        const json: TaskInsertProperty = {status: 0, taskType: 1, uid: 1, workorderNo: "1"}
        const res = await ac.task.insert(json)
        console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(1)
        expect(res.data[0].status).toBe(json.status)
        // expect(res.data[0].taskType).toBe(json.taskType)
        expect(res.data[0].uid).toBe(json.uid)
        expect(res.data[0].workorderNo).toBe(json.workorderNo)
    },2000)

    test('task修改',async () => {
        const json1:TaskUpdateProperty = {id, status: 1, taskType: 1, uid: 1, workorderNo: "1"}
        const res =await ac.task.update(json1)
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(1)
        expect(res.data[0].status).toBe(json1.status)
        // expect(res.data[0].taskType).toBe(json.taskType)
        expect(res.data[0].uid).toBe(json1.uid)
        expect(res.data[0].workorderNo).toBe(json1.workorderNo)
    },2000)

    test('task查询',async () => {
        const json:TaskSelectProperty = {id, status: 1, taskType: 1, uid: 1, workorderNo: "1"}
        const res =await ac.task.select(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].status).toBe(1)
    },2000)

    test('task表删除', async () => {
        const json:TaskSelectProperty = {id, status: 1, taskType: 1, uid: 1, workorderNo: "1"}
        const res = await ac.task.delete(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
    }, 2000)
})
