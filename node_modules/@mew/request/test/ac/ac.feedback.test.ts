import {AuthData, Mc} from "../../src/ms/mc";
import axios from "axios";
import {Ac, FeedbackInsertProperty, FeedbackUpdateProperty} from "../../src/ms/ac";

const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let ac

describe('ac.feedback',()=>{
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        ac = Ac(service)
    })
    const id = 1
    test('feedback 表删除',async() => {
        const res = await ac.feedback.delete({id})
        console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(0)
    },2000)

    test('feedback 表增加',async() => {
        const json:FeedbackInsertProperty = {id,companyId: 1, enabled: true, name: "损坏", type: "损坏类"}
        const res = await ac.feedback.insert(json)
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].companyId).toBe(json.companyId)
        expect(res.data[0].enabled).toBe(json.enabled)
        expect(res.data[0].name).toBe(json.name)
        expect(res.data[0].type).toBe(json.type)
    },2000)

    test('feedback表增加相同type',async() => {
        const json:FeedbackInsertProperty = {id: 2,companyId: 1, enabled: true, name: "遗失", type: "损坏类"}
        const res = await ac.feedback.insert(json)
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].companyId).toBe(json.companyId)
        expect(res.data[0].enabled).toBe(json.enabled)
        expect(res.data[0].name).toBe(json.name)
        expect(res.data[0].type).toBe(json.type)
    },2000)

    const json:FeedbackUpdateProperty = {id:2,companyId: 1, enabled: false, name: "损坏1", type: "损坏类1"}
    test('feedback表修改',async() => {
        const res = await ac.feedback.update(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].companyId).toBe(json.companyId)
        expect(res.data[0].enabled).toBe(json.enabled)
        expect(res.data[0].name).toBe(json.name)
        expect(res.data[0].type).toBe(json.type)
    },2000)

    test('feedback表查询',async() => {
        const res = await ac.feedback.select({id: 2})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].companyId).toBe(json.companyId)
        expect(res.data[0].enabled).toBe(json.enabled)
        expect(res.data[0].name).toBe(json.name)
        expect(res.data[0].type).toBe(json.type)
    },2000)

    test('feedback表删除id=2',async() => {
        const res = await ac.feedback.delete({id: 2})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].companyId).toBe(json.companyId)
        expect(res.data[0].enabled).toBe(json.enabled)
        expect(res.data[0].name).toBe(json.name)
        expect(res.data[0].type).toBe(json.type)
    },2000)
})
