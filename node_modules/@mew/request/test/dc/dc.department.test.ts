import {AuthData, Mc} from "../../src/ms/mc";
import {Dc, DepartmentInsertProperty} from "../../src/ms/dc";
import axios from "axios";
const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let dc
describe('dc', () => {
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        dc = Dc(service)
    })

    const id=1, companyId=1

    test('department删除name=测试部门1',async () => {
        const res =await dc.department.delete({id: 2})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        // expect(res.data[0].id).toBe(2)
    },2000)

    test(`确保department表id=1的name=测试部门`, async() => {
        const res= await dc.department.select({name: '测试部门'})
        // 如果数据不存在，在department表增加name=测试部门
        if (res.data.length == 0){
            const json:DepartmentInsertProperty = {companyId: 1, id, name: "测试部门"}
            const res = await dc.department.insert(json)
            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBe(1)
            expect(res.data[0].id).toBe(1)
            expect(res.data[0].name).toBe(json.name)
            expect(res.data[0].companyId).toBe(json.companyId)
        }
    },2000)

    test('department表增加name=测试部门0',async () => {
        const res = await dc.department.insert({companyId: 1, id: 2, name:'测试部门0'})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(2)
        expect(res.data[0].name).toBe('测试部门0')
    },2000)

    test('department表修改name=测试部门1',async () => {
        const res = await dc.department.update({id: 2, name:'测试部门1'})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(2)
        expect(res.data[0].name).toBe('测试部门1')
    },2000)

    test('department表中包含companyId=1的数据',async () => {
        const res = await dc.department.select({companyId})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(1)
    },2000)

})
