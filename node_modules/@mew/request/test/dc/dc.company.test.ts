import axios from "axios";
import {AuthData} from "../../src/ms/mc";
import {Mc, Dc} from "../../src/main";
import {CompanyInsertProperty} from "../../src/ms/dc";

const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let dc

describe('dc', () => {
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        dc = Dc(service)
    })


    test('company表删除name=测试公司1', async() => {
        const res = await dc.company.delete({id: 2})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        // expect(res.data[0].id).toBe(2)
    },2000)

    test('company表增加', async() => {
        const res= await dc.company.select({groupId: 1, id: 1, name: '测试集团'})
        // 如果数据不存在，在company表增加name=测试公司
        if (res.data.length == 0){
            const json:CompanyInsertProperty = {province: "江苏", name: "测试公司", groupId: 1, city:'常州'}
            const res = await dc.company.insert(json)
            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBe(1)
            expect(res.data[0].id).toBe(1)
            expect(res.data[0].name).toBe(json.name)
            expect(res.data[0].groupId).toBe(json.groupId)
        }
    },2000)

    test('company表增加name=测试公司0', async() => {
        const res = await dc.company.insert({id: 2, name: '测试公司0', groupId: 1})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(2)
        expect(res.data[0].name).toBe('测试公司0')
        expect(res.data[0].groupId).toBe(1)
    },2000)

    test('company修改id=2的name=测试公司1', async() => {
        const res = await dc.company.update({id: 2, name: '测试公司1', groupId: 1})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data[0].id).toBe(2)
        expect(res.data[0].name).toBe('测试公司1')
    },2000)

    test('company表查询groupId=1', async() => {
        const res = await dc.company.select({id: 1, groupId: 1})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(1)
    },2000)

})
