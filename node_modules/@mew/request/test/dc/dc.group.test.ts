import axios from "axios";
import {AxiosEnv, Dc, Mc} from "../../src/main";
import {GroupInsertProperty} from "../../src/ms/dc";
import {AuthData} from "../../src/ms/mc";

const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let dc
/**
 * 提供基础数据
 */
describe('group 表1 ',()=>{
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        dc = Dc(service)
    })

    test('确保group表中id=1的group为name:宝合,provice:江苏,city:常州', async() => {
        const res = await dc.group.select({id:1})
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].name).toBe('宝合')
        expect(res.data[0].province).toBe('江苏')
        expect(res.data[0].city).toBe('常州')
    },2000)

    test('group表删除', async() => {
        const res = await dc.group.delete({id: 2})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(0)
        // expect(res.data[0].id).toBe(2)
    },2000)

    test('group表确保存在name=测试部门', async() => {
        const res= await dc.group.select({name: '测试集团'})
        // 如果数据不存在，在group表增加name=测试集团
        if (res.data.length == 0){
            const json:GroupInsertProperty = {city: "常州", name: "mew", province: "江苏", id:1}
            const res = await dc.group.insert(json)
            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBe(1)
            expect(res.data[0].id).toBe(1)
            expect(res.data[0].name).toBe(json.name)
            expect(res.data[0].city).toBe(json.city)
            expect(res.data[0].province).toBe(json.province)
        }
    },2000)

    test('group表增加name=测试集团0', async() => {
        const res = await dc.group.insert({city: "", province: "", id: 2, name: '测试集团0'})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(2)
        expect(res.data[0].name).toBe('测试集团0')
    },2000)

    test('group表修改id=2的name=测试集团1，province=上海，city=上海', async() => {
        const res = await dc.group.update({city: "上海", name: "测试集团1", province: "上海", id: 2})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data[0].id).toBe(2)
        expect(res.data[0].name).toBe('测试集团1')
    },2000)

    test('group表查询', async() => {
        const res = await dc.group.select({pageSize: 1, curPageNo: 1})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(1)
    },2000)
})

describe('group 表2',()=>{
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        dc = Dc(service)
    })

    const deviceId='052003001'

    let json = {city: "cz", name: "mew", province: "js", id:1976}

    test('group表删除', async() => {
        const res = await dc.group.delete({id:json.id})
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        // expect(res.data[0].id).toBe(json.id)
        expect(res.data.length).toBeGreaterThanOrEqual(0)
    },2000)

    test('group表增加', async() => {
        const res = await dc.group.insert(json)
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].name).toBe(json.name)
    },2000)

    test('group表修改', async() => {
        json.name='mew2'
        const res = await dc.group.update(json)
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].name).toBe(json.name)
    },2000)

    test('group表查询', async() => {
        json.name='mew2'
        const res = await dc.group.select({id:json.id})
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].name).toBe(json.name)
    },2000)

    test('group表删除', async() => {
        const res = await dc.group.delete(json)
        // console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        // expect(res.data[0].id).toBe(json.id)
        expect(res.data.length).toBeGreaterThan(0)
    },2000)

})
