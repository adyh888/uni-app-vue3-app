import {Mc} from '../../src/main'
import axios from "axios";
import {Access, RoleAccess} from "../../src/ms/mc";
const service = axios.create({
    baseURL: 'https://api.mew-iot.cn',
    // baseURL: 'http://172.16.10.95:50200',
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
const mc = Mc(service)

const appId = '5000000002334316' // 钉钉企业第三方应用-智能配发柜

describe('role_access',()=>{
    beforeAll(async()=>{

    })

    test('app getAccessByRole', async() => {
        const mc = Mc(service)
        const res = await mc.getAccessByRole(1)
        console.log(res)
        // expect(res.code).toBe(0)
        // expect(res.msg).toBe('success')
        // expect(res.data.expireIn).toBe(7200)
        // expect(res.data.expireAt).toBeGreaterThan(0)
        // expect(res.data.accessToken).not.toBe('')
    },2000)

    test.skip('app /mc/app/updateBatch', async() => {
        const mc = Mc(service)
        const json = {roleId: 19, accessIdArr:[1, 21, 23, 212, 219, 258, 259] }
        const res = await mc.updateRoleAccessBatch(json)
        console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        // expect(res.data.expireIn).toBe(7200)
        // expect(res.data.expireAt).toBeGreaterThan(0)
        // expect(res.data.accessToken).not.toBe('')
    },2000)

    test('app getRoleAccessListByRoleId', async() => {
        const mc = Mc(service)
        const res = await mc.role_access.find({roleId: 7})
        const res2 = await mc.access.find({})
        console.log(res2.data.length)
        const accessList = res2.data
        aa(res.data,accessList)
        firstLevelMenu(accessList)
    },2000)

})

function aa(roleAccessList:RoleAccess[],accessList:Access[]) {
    // console.log(51, roleAccessList)
    const accessIdList = roleAccessList.map(e=>{return e.accessId})
    console.log(53, accessIdList)
    const arr:number[] = []
    accessIdList.forEach(accessId=>{
        const index = accessList.findIndex(item => item.id === accessId)
        console.log(60,index)
        if (index > -1) arr.push(accessId)
    })
    console.log(64, arr)
    return arr
}

function firstLevelMenu(accessList:Access[]) {
    const arr = accessList.filter(element => element.type === 1)
    console.log(70, arr[1])
    // console.log(70, arr[1])
}
