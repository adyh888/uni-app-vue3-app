import {
    AuthData,
    RoleDeleteProperty,
    RoleInsertProperty,
    RoleSelectProperty,
    RoleUpdateProperty
} from "../../src/ms/mc";
import axios from "axios";
import {Mc} from "../../src/main";

// import {RoleInsertProperty as RoleInsertProperty, RoleSelectProperty} from "../../src/ms/uc";

// const baseURL = 'https://api.mew-iot.cn'
const baseURL = 'http://www.mew-iot.cn:51000'


let service = axios.create({
    baseURL,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData: AuthData
let mc

const appId = '5000000002334316' // 钉钉企业第三方应用-智能配发柜

describe('mc.role', () => {
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers: {
                'Authorization': 'Bearer ' + access_token
            }
        })
        // mc1 = Mc(service)
    })

    test('删除companyId=1的角色',async () => {
        const json:RoleDeleteProperty = {companyId: 1}
        const res = await mc.role.delete(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(0)
    })

    test(`确保mc.role表包含companyId=1的数据`, async () => {
        async function insertData(companyId, id, grade, name, scope) {
            const json:RoleInsertProperty = {companyId:companyId, id:id, grade:grade, name:name, scope:scope}
            const res = await mc.role.insert(json)

            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBe(1)

            let role = res.data[0]

            expect(role.id).toBe(json.id)
            expect(role.grade).toBe(json.grade)
            expect(role.name).toBe(json.name)
            expect(role.scope).toBe(json.scope)
        }

        const res = await mc.role.select({companyId: 1})
        if (res.total == 0) {
            await insertData(1, 1, 1, "超级管理员", '*/*/*')
            await insertData(1, 2, 2, "公司管理员", '*/*/*')
            await insertData(1, 3, 1, "普通用户", 'mc/*/*, uc/*/*, ac/feedback/*, tc/tool/*, lc/log/select')
        }
    }, 2000)

    test('更新id=3的scope和权限等级',async () => {
        const json:RoleUpdateProperty = {id: 3, scope: 'mc/*/*, uc/*/*, ac/feedback/*, tc/tool/*, lc/*/*'}
        const res = await mc.role.update(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].scope).toBe(json.scope)
    },2000)

    test(`查询mc.role表包含companyId=1`, async () => {
        const res = await mc.role.find({companyId: 1})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(3)
    }, 2000)
})
