import {AccessInsertProperty, AccessSelectProperty, AccessUpdateProperty, AuthData} from "../../src/ms/mc";
import axios from "axios";
import {Mc} from "../../src/main";

// const baseURL = 'https://api.mew-iot.cn'
const baseURL = 'http://www.mew-iot.cn:51000'


let service = axios.create({
    baseURL,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData: AuthData
let mc


/**
 *
 * @param id access.id
 * @param moduleName 后台菜单模块名
 * @param actionName 权限名
 * @param moduleId
 * @param url 地址
 * @param type 菜单层级
 * @param sort 同级菜单排序
 */
describe('mc.role', () => {
    beforeEach(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers: {
                'Authorization': 'Bearer ' + access_token
            }
        })
    })
// function testMenu(id, moduleName,actionName, moduleId, url, type, sort) {
//     describe(`确保access表有${type}级菜单-模块${moduleName}-权限${actionName}`, () => {
//         beforeAll(async () => {
//             const res = await mc.access.select({id: id})
//             if (res.total === 0) {
//                 await mc.access.insert({
//                     id: id,
//                     moduleName: moduleName,
//                     description: moduleName,
//                     actionName: actionName,
//                     status: true,
//                     moduleId: moduleId,
//                     sort: sort,
//                     type: type,
//                     url: url,
//                 })
//             }
//         })
//         test(`查询access表有${type}级菜单-${moduleName}-权限-${actionName}`, async () => {
//             const res = await mc.access.select({id: id})
//             // console.log(res)
//             expect(res.code).toBe(0)
//             expect(res.msg).toBe('success')
//             expect(res.data[0].id).toBe(id)
//             expect(res.data[0].moduleName).toBe(moduleName)
//             expect(res.data[0].moduleId).toBe(moduleId)
//             expect(res.data[0].url).toBe(url)
//             expect(res.data[0].type).toBe(type)
//             expect(res.data[0].sort).toBe(sort)
//         }, 2000)
//     })
// }
//
// // 一级菜单
// testMenu(1, '用户中心','', 0, 'uc', 1, 1)
// testMenu(2, '设备中心', '',0, 'dc', 1, 2)
// testMenu(3, '工具中心', '',0, 'tc', 1, 3)
// testMenu(4, '管理中心', '',0, 'mc', 1, 4)
// testMenu(5, '日志中心', '',0, 'lc', 1, 5)
// testMenu(7, '视频中心', '',0, 'vedio', 1, 6)
// testMenu(9, '报警中心', '',0, 'ac', 1, 7)
// testMenu(10, '系统设置', '',0, 'SystemSettings', 1, 9)
//
// // 用户中心-二级菜单
// testMenu(21, '','用户列表', 1, 'userlist', 2, 1)
// testMenu(23, '','设备用户', 1, 'deviceuser', 2, 2)
// testMenu(219, '','微信用户', 1, 'wxUser', 2, 4)
// testMenu(258, '','卡号', 1, 'cardNumber', 2, 4)ss
// testMenu(259, '','微信', 1, 'wx', 2, 5)

    test(`确保mc.access表存在有效数据`,async () => {
        async function insertData(id, moduleName, actionName, type, url, moduleId, sort, status) {
            const json:AccessInsertProperty ={
                actionName: actionName,
                moduleId: moduleId,
                moduleName: moduleName,
                sort: sort,
                status: status,
                type: type,
                url: url,
                id: id
            }
            const res = await mc.access.insert(json)
            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data[0].id).toBe(json.id)
            expect(res.data[0].moduleName).toBe(json.moduleName)
            expect(res.data[0].actionName).toBe(json.actionName)
            expect(res.data[0].type).toBe(json.type)
            expect(res.data[0].url).toBe(json.url)
            expect(res.data[0].moduleId).toBe(json.moduleId)
            expect(res.data[0].sort).toBe(json.sort)
            expect(res.data[0].status).toBe(json.status)
        }
        const res = await mc.access.select({companyId: 1})
        if (res.total == 0) {
            // 一级菜单
            await insertData(1, '用户中心','', 0, 'uc', 1, 1,true)
            await insertData(2, '设备中心', '',0, 'dc', 1, 2, true)
            await insertData(3, '工具中心', '',0, 'tc', 1, 3, true)
            await insertData(4, '管理中心', '',0, 'mc', 1, 4, true)
            await insertData(5, '日志中心', '',0, 'lc', 1, 5, true)
            await insertData(6, '报警中心', '',0, 'video', 1, 6, true)
            await insertData(7, '视频中心', '',0, 'ac', 1, 7, true)
            await insertData(8, '系统设置', '',0, 'SystemSettings', 1, 9, true)
            // 用户中心-二级菜单
            await insertData(9, '','用户列表', 2, 'userList', 1, 1, true)
            await insertData(10, '','设备用户', 2, 'deviceUser', 1, 2, true)
            await insertData(11, '','用户角色', 2, 'role', 1, 3, true)
            await insertData(12, '','微信用户', 2, 'wxUser', 1, 4, true)
            await insertData(13, '','卡号', 2, 'cardNumber', 1, 5, true)
            await insertData(14, '','微信', 2, 'wx', 1, 6, true)
            // 设备中心-二级菜单
            await insertData(15, '','公司列表', 2, 'companyList', 2, 1,  true)
            await insertData(16, '','部门列表', 2, 'departmentList', 2, 2, true)
            await insertData(17, '','班组列表', 2, 'teamList', 2, 3, true)
            await insertData(18, '','设备列表', 2, 'DeviceList', 2, 4, true)
            await insertData(19, '','充电器设置', 2, 'charger', 2, 5, true)
            await insertData(20, '','设备编辑', 2, 'deviceDetail', 2, 6,  true)
            // 工具中心-二级菜单
            await insertData(21, '','工具列表', 2, 'toolList', 3, 1, true)
            await insertData(22, '','RFID列表', 2, 'rfidList', 3, 2, true)
            await insertData(23, '','工单列表', 2, 'workOrderList', 3, 3, true)
            await insertData(24, '','工单列表', 2, 'workOrder', 3, 4, true)
            await insertData(25, '','调拨表详情', 2, 'transferItem', 3, 5, true)
            await insertData(26, '','工单详情', 2, 'workOrderItem', 3, 6, true)
            // 管理中心-二级菜单
            await insertData(27, '','管理员', 2, 'manager', 4, 1, true)
            await insertData(28, '','角色管理', 2, 'role', 4, 2, true)
            await insertData(29, '','菜单管理', 2, 'menuManagement', 4, 3, true)
            // 日志中心-二级菜单
            await insertData(30, '','借还记录', 2, 'borrowingAndReturningRecords', 5, 1, true)
            await insertData(31, '','报警记录', 2, 'alarmRecord', 5, 2, true)
            await insertData(32, '','用户登录', 2, 'loginUser', 5, 3, true)
            await insertData(33, '','反馈记录', 2, 'feedBack', 5, 4, true)
            await insertData(34, '','充电记录', 2, 'chargingRecord', 52, 5, true)
            await insertData(35, '','短租记录', 2, 'shortTermRentalRecords', 5, 6, true)
            await insertData(36, '','报修记录', 2, 'repairRecord', 5, 7, true)
            await insertData(37, '','商品售卖记录', 2, 'goodsSale', 5, 8, true)
            await insertData(38, '','上下架记录', 2, 'verticalRecord', 5, 9, true)
            // 报警中心-二级菜单
            await insertData(39, '','反馈类型', 2, 'feedbackType', 6, 1, true)
            await insertData(40, '','报警类型', 2, 'alarmType', 1, 1, true)
        }
    },2000)

    test('修改报警类型的排序和上级菜单',async () => {
        const json:AccessUpdateProperty = {id: 40, moduleId: 6, sort: 2}
    })

    test('查询所有权限',async () => {
        const res = await mc.access.find({curPageNo: 1, pageSize: 40})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(40)
    })
})






