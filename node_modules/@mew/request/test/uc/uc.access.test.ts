import {Mc, Tc} from '../../src/main'
import {AuthData} from "../../src/ms/mc";
import axios from "axios";
import {AccessInsertProperty} from "../../src/ms/uc";

const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let uc

describe('uc', () => {
    beforeAll(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        uc = Tc(service)
    })

    const id=1

    test(`确保access表包含有效数据`,async () => {
        async function insertData(json:AccessInsertProperty) {
            const res = await uc.access.insert(json)
            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBe(1)

            let access = res.data[0]

            expect(access.actionName).toBe(json.actionName)
            expect(access.id).toBe(json.id)
            expect(access.description).toBe(json.description)
            expect(access.moduleId).toBe(json.moduleId)
            expect(access.moduleName).toBe(json.moduleName)
            expect(access.sort).toBe(json.sort)
            expect(access.status).toBe(json.status)
            expect(access.type).toBe(json.type)
            expect(access.url).toBe(json.url)
        }

        const res = await uc.access.select({pageSize: 1, curPageNo: 1 })
        if (res.data.length == 0) {

            await insertData({
                id, actionName: "1", description: "1", moduleId: 1, moduleName: "1", sort: 1, status: true, type: 1, url: "1"
            })
            await insertData({
                id: 2, actionName: "2", description: "2", moduleId: 2, moduleName: "2", sort: 2, status: true, type: 2, url: "2"
            })
        }
    },2000)
})
