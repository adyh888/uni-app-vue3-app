import {Mc, Uc} from '../../src/main'
import {AuthData} from "../../src/ms/mc";
import {RoleInsertProperty, RoleSelectProperty} from "../../src/ms/uc";
import axios from "axios";

// const baseURL = 'http://www.mew-iot.cn:51000'
const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let uc

describe('uc', () => {
    beforeAll(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        uc = Uc(service)
    })

    const id=1, companyId=1

    test(`确保role表包含companyId=1`,async () => {
        async function insertData(json: RoleInsertProperty) {
            const res = await uc.role.insert(json)

            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBe(1)

            let role = res.data[0]

            expect(role.companyId).toBe(json.companyId)
            expect(role.status).toBe(json.status)
            expect(role.name).toBe(json.name)
            expect(role.description).toBe(json.description)
        }

        const res = await uc.role.select({companyId})
        if (res.data.length == 0) {

            await insertData({id,companyId, description: "管理员", name: "管理员", status: true})
            await insertData({id: 2, companyId, description: "普通用户", name: "普通用户", status: true})
            await insertData({id: 3,companyId, description: "无权限", name: "无权限", status: true})
        }
    }, 2000)

    test('role表查询companyId=1的权限', async () => {
        async function selectData(json:RoleSelectProperty){
            const res = await uc.role.select(json)

            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBe(1)

            let role = res.data[0]

            expect(role.companyId).toBe(json.companyId)
            expect(role.name).toBe(json.name)
        }

        await selectData({companyId, name: "管理员", status: true})
        await selectData({companyId, name: "普通用户", status: true})
        await selectData({companyId, name: "无权限", status: true})
    },2000)

    test(`确保role表包含companyId=1`, async() => {
        const res= await uc.role.select({companyId:1})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
    },2000)

    test(`确保role表包含companyId=10816`, async() => {
        const res= await uc.role.select({companyId:10816})
        console.log(res)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
    },2000)


})


