import {Mc, Tc} from '../../src/main'
import {AuthData} from "../../src/ms/mc";
import {FingerInsertProperty} from "../../src/ms/uc";
import axios from "axios";

// const baseURL = 'http://www.mew-iot.cn:51000'
const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let uc

describe('uc', () => {
    beforeAll(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        uc = Tc(service)
    })
    const id=1, no=1, deviceId='022111001'

    test('finger表删除id=2',async () => {
        const res = await uc.finger.delete({id: 2})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(0)
    })

    test(`确保finger表包含no=1,id=1`, async() => {
        const res= await uc.finger.select({id, no})
        if (res.data.length == 0){
            const json:FingerInsertProperty = {id, no, deviceId, fingerprint: '1647953368448'}
            const res = await uc.finger.insert(json)
            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBe(1)
            expect(res.data[0].id).toBe(1)
            expect(res.data[0].no).toBe(json.no)
            expect(res.data[0].deviceId).toBe(json.deviceId)
            expect(res.data[0].fingerprint).toBe(json.fingerprint)

        }
    },2000)

    test('finger表增加id=2',async () => {
        const res = await uc.finger.insert({id: 2, no: 2, deviceId, fingerprint: '1647952611192'})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(2)
        expect(res.data[0].no).toBe(2)
        expect(res.data[0].deviceId).toBe('022111001')
        expect(res.data[0].fingerprint).toBe('1647952611192')
    })

    test('finger表修改id=2绑定的设备',async () => {
        const res = await uc.finger.update({id: 2, deviceId: '022111002'})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(2)
        expect(res.data[0].no).toBe(2)
        expect(res.data[0].deviceId).toBe('022111002')
    })

    test('finger表修改id=2绑定不存在的设备',async () => {
        const res = await uc.finger.update({id: 2, deviceId: '022111003'})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(2)
        expect(res.data[0].no).toBe(2)
        expect(res.data[0].deviceId).toBe('022111003')
    })

    test('finger表查询',async () => {
        const res =await uc.finger.find({id})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(1)
    })
})
