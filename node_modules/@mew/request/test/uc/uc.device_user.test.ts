import {Mc, Tc} from '../../src/main'
import {AuthData} from "../../src/ms/mc";
import {CardInsertProperty, DeviceUserInsertProperty, UserInsertProperty} from "../../src/ms/uc";
import axios from "axios";

// const baseURL = 'http://www.mew-iot.cn:51000'
const baseURL = 'https://api.mew-iot.cn'

let service = axios.create({
    baseURL ,
    // adapter: axiosAdapterUniapp as AxiosAdapter,
    timeout: 10000
})
let authData:AuthData
let uc

describe('uc', () => {
    beforeAll(async () => {
        const mc = Mc(service)
        const res = await mc.getAuth({username: 'admin', password: '111111'})
        authData = res.data
        const access_token = authData.access_token
        service = axios.create({
            baseURL,
            // adapter: axiosAdapterUniapp as AxiosAdapter,
            timeout: 10000,
            headers:{
                'Authorization': 'Bearer ' + access_token
            }
        })
        uc = Tc(service)
    })
    const id=1

    test('删除id=2的用户',async () => {
        const res = await uc.device_user.delete({id: 2})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBeGreaterThanOrEqual(0)
    },2000)

    test(`确保device_user表包含uid=1,deviceId=022111001`, async() => {
        const res= await uc.device_user.select({uid: 1, deviceId: '022111001'})
        if (res.data.length == 0){
            const json:DeviceUserInsertProperty = {id, roleId: 1, uid: 1, deviceId: '022111001'}
            const res = await uc.device_user.insert(json)
            expect(res.code).toBe(0)
            expect(res.msg).toBe('success')
            expect(res.data.length).toBe(1)
            expect(res.data[0].id).toBe(json.id)
            expect(res.data[0].uid).toBe(json.uid)
            expect(res.data[0].roleId).toBe(json.roleId)
            expect(res.data[0].deviceId).toBe(json.deviceId)
        }
    },2000)

    test('device_user表增加deviceId=022111002的用户',async () => {
        const json = {id: 2, roleId: 2, uid: 3, username: "admin", deviceId: '022111002'}
        const res = await uc.device_user.insert(json)
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(json.id)
        expect(res.data[0].uid).toBe(json.uid)
        expect(res.data[0].roleId).toBe(json.roleId)
        expect(res.data[0].deviceId).toBe(json.deviceId)

    })

    test('device_user表增加不存在的设备的用户',async () => {
        const json = {id: 3, roleId: 1, uid: 1, username: "admin", deviceId: '022111003'}
        const res = await uc.device_user.insert(json)
        expect(res.code).toBe(1)
        expect(res.msg).toBe('fail')
    })

    test('device_user表将id=2的用户权限改为1（管理员）,设备改为022111001',async () => {
        const res = await uc.device_user.update({id: 2, roleId: 1, deviceId: '022111001'})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(2)
        expect(res.data[0].roleId).toBe(2)
    })

    test('device_user表查询',async () => {
        const res = await uc.device_user.find({id: 2})
        expect(res.code).toBe(0)
        expect(res.msg).toBe('success')
        expect(res.data.length).toBe(1)
        expect(res.data[0].id).toBe(2)
    })
})
