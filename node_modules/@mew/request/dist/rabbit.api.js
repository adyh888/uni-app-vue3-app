"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var RabbitApi = /** @class */ (function () {
    function RabbitApi(service) {
        this.exchangeName = '';
        this.queueName = '';
        this._service = service;
    }
    RabbitApi.prototype.permissions = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._get("/api/vhosts/%2f/permissions")];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    RabbitApi.prototype.bind = function (exchangeName, queueName, routingKey) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.exchangeName = exchangeName;
                        this.queueName = queueName;
                        data = { "routing_key": routingKey, "arguments": {} };
                        return [4 /*yield*/, this._post("/api/bindings/%2f/e/" + exchangeName + "/q/" + queueName, data)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    RabbitApi.prototype.newQueue = function (queueName) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.queueName = queueName;
                        data = { "auto_delete": false, "durable": true, "arguments": {}, "node": "rabbit@v5" };
                        return [4 /*yield*/, this._put("/api/queues/%2f/" + queueName, data)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    RabbitApi.prototype.deleteQueue = function (queueName) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        data = { "type": "topic", "auto_delete": false, "durable": true, "internal": false, "arguments": {} };
                        return [4 /*yield*/, this._delete("/api/queues/%2f/" + queueName, data)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    RabbitApi.prototype.newExchange = function (exchangeName) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.exchangeName = exchangeName;
                        data = { "type": "topic", "auto_delete": false, "durable": true, "internal": false, "arguments": {} };
                        return [4 /*yield*/, this._put("/api/exchanges/%2f/" + exchangeName, data)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    RabbitApi.prototype.deleteExchange = function (exchangeName) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        data = { "type": "topic", "auto_delete": false, "durable": true, "internal": false, "arguments": {} };
                        return [4 /*yield*/, this._delete("/api/exchanges/%2f/" + exchangeName, data)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    RabbitApi.prototype.consumers = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, arr, _i, res_1, item;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._get('/api/consumers')];
                    case 1:
                        res = _a.sent();
                        arr = [];
                        for (_i = 0, res_1 = res; _i < res_1.length; _i++) {
                            item = res_1[_i];
                            // @ts-ignore
                            arr.push(item.channel_details.user);
                        }
                        // console.log(arr)
                        return [2 /*return*/, res];
                }
            });
        });
    };
    RabbitApi.prototype.overview = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._get('/api/overview')];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    RabbitApi.prototype.users = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._get('/api/users')];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    // 开门
    RabbitApi.prototype.openDoor = function (payload) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        data = {
                            properties: {},
                            routing_key: "web.device.openDoor",
                            payload: JSON.stringify(payload),
                            payload_encoding: "string"
                        };
                        return [4 /*yield*/, this.pubToExchanges(data)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    RabbitApi.prototype.fakeDoorStatusChange = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var payload, data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        payload = {
                            location: 'A01-01',
                            lockStatus: true
                        };
                        data = {
                            properties: {},
                            routing_key: "device.web.doorStatus",
                            payload: JSON.stringify(payload),
                            payload_encoding: "string"
                        };
                        return [4 /*yield*/, this.pubToExchanges(data)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    // 发布到exchange
    RabbitApi.prototype.pubToExchanges = function (data) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var url, res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        url = "/api/exchanges/%2f//publish";
                        return [4 /*yield*/, this._post(url, data)];
                    case 1:
                        res = _a.sent();
                        console.log(100, res);
                        return [2 /*return*/, res];
                }
            });
        });
    };
    // 发布到queue
    RabbitApi.prototype.pubToQueue = function (data) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var url, res;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        url = "/api/queues/%2f/" + this.exchangeName + "/publish";
                        return [4 /*yield*/, this._post(url, data)];
                    case 1:
                        res = _a.sent();
                        console.log(104, res);
                        return [2 /*return*/, res];
                }
            });
        });
    };
    // 接受消息
    RabbitApi.prototype.getLockStatus = function (location) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, acceptArr, rejectArr, _i, rejectArr_1, element, json, last, json;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log('getLockStatus');
                        return [4 /*yield*/, this._getMessage()];
                    case 1:
                        res = _a.sent();
                        console.log(102, res);
                        acceptArr = [];
                        rejectArr = [];
                        res.forEach(function (element) {
                            // console.log(104, element)
                            try {
                                var json = JSON.parse(element.payload);
                                if (json.location === location) {
                                    acceptArr.push(element);
                                }
                                else {
                                    rejectArr.push(element);
                                }
                            }
                            catch (e) {
                                console.log(e);
                            }
                        });
                        console.log({ acceptArr: acceptArr, rejectArr: rejectArr });
                        _i = 0, rejectArr_1 = rejectArr;
                        _a.label = 2;
                    case 2:
                        if (!(_i < rejectArr_1.length)) return [3 /*break*/, 5];
                        element = rejectArr_1[_i];
                        json = { properties: {}, routing_key: element.routing_key, payload: element.payload, payload_encoding: "string" };
                        return [4 /*yield*/, this.pubToExchanges(json)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4:
                        _i++;
                        return [3 /*break*/, 2];
                    case 5:
                        last = acceptArr.pop();
                        if (last) {
                            try {
                                json = JSON.parse(last.payload);
                                return [2 /*return*/, json.status];
                            }
                            catch (e) {
                                console.log(140, e);
                            }
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    RabbitApi.prototype._getMessage = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        data = {
                            "count": 100,
                            "ackmode": "ack_requeue_false",
                            "encoding": "auto",
                            "truncate": 50000
                        };
                        return [4 /*yield*/, this._post("/api/queues/%2f/" + this.exchangeName + ".*.web/get", data)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    RabbitApi.prototype._post = function (uri, params, msg) {
        if (params === void 0) { params = {}; }
        if (msg === void 0) { msg = ''; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, error_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this._service.post(uri, params)
                            // console.log(153,res)
                            // console.log('POST',this._service.defaults.baseURL,uri,params, msg, 'success')
                        ];
                    case 1:
                        res = _a.sent();
                        // console.log(153,res)
                        // console.log('POST',this._service.defaults.baseURL,uri,params, msg, 'success')
                        return [2 /*return*/, res.data];
                    case 2:
                        error_1 = _a.sent();
                        // store.state.msgSuccess = msg + '失败'
                        console.log(error_1);
                        console.log('POST', this._service.defaults.baseURL, uri, params, msg, error_1);
                        throw error_1;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    RabbitApi.prototype._put = function (uri, params, msg) {
        if (params === void 0) { params = {}; }
        if (msg === void 0) { msg = ''; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, error_2;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this._service.put(uri, params)
                            // console.log(94,res)
                            // console.log('PUT',this._service.defaults.baseURL,uri,params, msg, 'success')
                        ];
                    case 1:
                        res = _a.sent();
                        // console.log(94,res)
                        // console.log('PUT',this._service.defaults.baseURL,uri,params, msg, 'success')
                        return [2 /*return*/, res.data];
                    case 2:
                        error_2 = _a.sent();
                        // store.state.msgSuccess = msg + '失败'
                        console.log(error_2);
                        console.log('PUT', this._service.defaults.baseURL, uri, params, msg, error_2);
                        throw error_2;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    RabbitApi.prototype._delete = function (uri, params, msg) {
        if (params === void 0) { params = {}; }
        if (msg === void 0) { msg = ''; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, error_3;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this._service.delete(uri, params)
                            // console.log(94,res)
                            // console.log('DELETE',this._service.defaults.baseURL,uri,params, msg, 'success')
                        ];
                    case 1:
                        res = _a.sent();
                        // console.log(94,res)
                        // console.log('DELETE',this._service.defaults.baseURL,uri,params, msg, 'success')
                        return [2 /*return*/, res.data];
                    case 2:
                        error_3 = _a.sent();
                        // store.state.msgSuccess = msg + '失败'
                        console.log(error_3);
                        console.log('DELETE', this._service.defaults.baseURL, uri, params, msg, error_3);
                        throw error_3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    RabbitApi.prototype._get = function (uri, params, msg) {
        if (params === void 0) { params = {}; }
        if (msg === void 0) { msg = ''; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var res, error_4;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this._service.get(uri, params)
                            // console.log(29,res)
                            // console.log('GET',this._service.defaults.baseURL,uri,params, msg, 'success')
                        ];
                    case 1:
                        res = _a.sent();
                        // console.log(29,res)
                        // console.log('GET',this._service.defaults.baseURL,uri,params, msg, 'success')
                        return [2 /*return*/, res.data];
                    case 2:
                        error_4 = _a.sent();
                        // store.state.msgSuccess = msg + '失败'
                        console.log(error_4);
                        console.log('GET', this._service.defaults.baseURL, uri, params, msg, error_4);
                        throw error_4;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return RabbitApi;
}());
exports.default = RabbitApi;
