export interface IRes<T = any> {
    code: number;
    msg: string;
    data: T;
    total?: number;
    error?: string;
}
export interface IResType<T = any> {
    code: number;
    msg: string;
    data: T[];
    total?: number;
    error?: string;
}
/**
 * 请求用类来集成
 */
export declare class Request<T, I, D, U, S> {
    private _uri;
    private _service;
    private _isDebugMode;
    private _timeout;
    constructor(uri: string, service: any, isDebugMode?: boolean, timeout?: number);
    insert(params: I): Promise<IResType<T>>;
    delete(params: D): Promise<IResType<T>>;
    /**
     * 用于dingtalk小程序
     * remove 相当于 post /xc/xxx/delete
     * @param params
     */
    remove(params: D): Promise<IResType<T>>;
    update(params: U): Promise<IResType<T>>;
    find(params: S): Promise<IResType<T>>;
    select(params: S): Promise<IResType<T>>;
}
/**
 * 米鸥科技封装-微服务Post请求
 * @param url
 * @param params
 * @param service
 * @param isDebugMode
 * @param timeout
 */
export declare function mewMsPost<T>(url: string, params: {} | undefined, service: any, isDebugMode?: boolean, timeout?: number): Promise<IResType<T>>;
/**
 * 米鸥科技封装-微服务Get请求
 * @param url
 * @param params
 * @param service
 * @param isDebugMode
 * @param timeout
 */
export declare function mewMsGet<T>(url: string, params: {} | undefined, service: any, isDebugMode?: boolean, timeout?: number): Promise<IResType<T>>;
/**
 * 米鸥科技封装-微服务Put请求
 * @param url
 * @param params
 * @param service
 * @param isDebugMode
 * @param timeout
 */
export declare function mewMsPut<T>(url: string, params: {} | undefined, service: any, isDebugMode?: boolean, timeout?: number): Promise<IResType<T>>;
/**
 * 米鸥科技封装-微服务Delete请求
 * @param url
 * @param params
 * @param service
 * @param isDebugMode
 * @param timeout
 */
export declare function mewMsDelete<T>(url: string, params: {} | undefined, service: any, isDebugMode?: boolean, timeout?: number): Promise<IResType<T>>;
/**
 * 米鸥科技封装-微服务Delete请求-用于dingtalk小程序-相当于 post /xc/xxx/delete
 * @param url
 * @param params
 * @param service
 * @param isDebugMode
 * @param timeout
 */
export declare function mewMsRemove<T>(url: string, params: {} | undefined, service: any, isDebugMode?: boolean, timeout?: number): Promise<IResType<T>>;
/**
 * 米鸥科技封装-微服务Request请求
 * @param url
 * @param params
 * @param method
 * @param service
 * @param isDebugMode
 * @param timeout
 */
export declare function mewMsRequest<T>(url: string, params: {} | undefined, method: "link" | "head" | "get" | "GET" | "delete" | "DELETE" | "HEAD" | "options" | "OPTIONS" | "post" | "POST" | "put" | "PUT" | "patch" | "PATCH" | "purge" | "PURGE" | "LINK" | "unlink" | "UNLINK" | undefined, service: any, isDebugMode?: boolean, timeout?: number): Promise<IResType<T>>;
/**
 * 米鸥科技封装Request请求
 * @param url BaseURL+uri
 * @param params
 * @param method
 * @param service
 * @param timeout
 * @param isDebugMode true:调试模式 false:正常模式(默认)
 */
export declare function mewRequest(url: string, params: {} | undefined, method: "link" | "head" | "get" | "GET" | "delete" | "DELETE" | "HEAD" | "options" | "OPTIONS" | "post" | "POST" | "put" | "PUT" | "patch" | "PATCH" | "purge" | "PURGE" | "LINK" | "unlink" | "UNLINK" | undefined, service: any, isDebugMode?: boolean, timeout?: number): Promise<any>;
