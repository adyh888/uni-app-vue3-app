import { Request } from "../request";
import { Company, DeviceType, Group } from "./dc";
export interface Rent {
    enabled?: boolean;
    companyId?: number;
    price?: number;
    duration?: number;
    partNo?: string;
    deviceId?: string;
    id?: number;
}
export interface RentSelectProperty extends Rent {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface RentUpdateProperty extends Rent {
    id: number;
}
export interface RentInsertProperty extends Rent {
    partNo: string;
}
export interface RentDeleteProperty extends Rent {
    id: number;
}
export interface Type {
    id?: number;
    companyId?: number;
    groupId?: number;
    center?: string;
    name?: string;
    kind?: string;
    type?: string;
    desc?: string;
    enabled?: boolean;
    group?: Group;
    company?: Company;
    deviceType?: DeviceType;
}
export interface TypeSelectProperty extends Type {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface TypeUpdateProperty extends Type {
    id: number;
}
export interface TypeInsertProperty extends Type {
    type: string;
}
export interface TypeDeleteProperty extends Type {
    id: number;
}
export interface StepPrice {
    enabled?: boolean;
    groupId?: number;
    companyId?: number;
    ignoreFactor?: number;
    standbyIgnoreFactor?: number;
    maxFactor?: number;
    minFactor?: number;
    minimumFactor?: number;
    price?: number;
    ladderNum?: number;
    partNo?: string;
    typeName?: string;
    id?: number;
}
export interface StepPriceSelectProperty extends StepPrice {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface StepPriceUpdateProperty extends StepPrice {
    id: number;
}
export interface StepPriceInsertProperty extends StepPrice {
    companyId: number;
    maxFactor: number;
    minFactor: number;
    price: number;
    typeName: string;
}
export interface StepPriceDeleteProperty extends StepPrice {
    id: number;
}
export interface ShoppingCart {
    groupId: number;
    companyId: number;
    uid: number;
    goodsIds: string;
    toolIds: string;
    rfids: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface ShoppingCartProperty {
    groupId?: number;
    companyId?: number;
    uid?: number;
    goodsIds?: string;
    toolIds?: string;
    rfids?: string;
    id?: number;
}
export interface ShoppingCartSelectProperty extends ShoppingCartProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface ShoppingCartUpdateProperty extends ShoppingCartProperty {
    id: number;
}
export interface ShoppingCartInsertProperty extends ShoppingCartProperty {
    groupId: number;
    companyId: number;
    uid: number;
}
export interface ShoppingCartDeleteProperty extends ShoppingCartProperty {
    id: number;
}
export interface Rfid {
    id: number;
    goodsId: number;
    epc: string;
    deviceTid: number;
    tid: string;
    deviceId: string;
    status: number;
    onShelf: number;
    createdAt: number;
    updatedAt: number;
}
export interface RfidInsertProperty {
    deviceTid?: number;
    id?: number;
    goodsId?: number;
    epc?: string;
    tid?: string;
    status: number;
    deviceId?: string;
    onShelf?: number;
}
export interface RfidUpdateProperty {
    deviceTid?: number;
    id: number;
    goodsId?: number;
    epc?: string;
    tid?: string;
    status?: number;
    deviceId?: string;
    onShelf?: number;
    inWarehouse?: number;
}
export interface RfidSelectProperty {
    deviceTid?: number;
    deviceId?: string;
    id?: number;
    goodsId?: number;
    epc?: string;
    tid?: string;
    status?: number;
    onShelf?: number;
    pageSize?: number;
    curPageNo?: number;
    startAt?: number;
    endAt?: number;
}
export interface RfidDeleteProperty {
    deviceTid?: number;
    id?: number;
    goodsId?: number;
    epc?: string;
    tid?: string;
    status?: number;
    deviceId?: string;
    onShelf?: number;
}
export interface Goods {
    id: number;
    goodsName: string;
    goodsDes: string;
    price: number;
    quantity: number;
    level: string;
    serialNum: string;
    partNo: string;
    size: string;
    tags: string;
    imgUrl: string;
    deviceId: string;
    tid: number;
    safetyStock: number;
    standardStock: number;
    typeId: number;
    locationId: number;
    status: number;
    createdAt: number;
    updatedAt: number;
}
export interface GoodsSelectProperty {
    id?: number;
    tid?: number;
    goodsName?: string;
    goodsDes?: string;
    price?: number;
    deviceId?: string;
    partNo?: string;
    serialNum?: string;
    quantity?: number;
    safetyStock?: number;
    standardStock?: number;
    locationId?: number;
    status?: number;
    imgUrl?: string;
    level?: string;
    size?: string;
    tags?: string;
    typeId?: number;
    pageSize?: number;
    curPageNo?: number;
    startAt?: number;
    endAt?: number;
}
export interface GoodsUpdateProperty {
    id: number;
    tid?: number;
    goodsName?: string;
    deviceId?: string;
    goodsDes?: string;
    serialNum?: string;
    partNo?: string;
    price?: number;
    quantity?: number;
    safetyStock?: number;
    standardStock?: number;
    locationId?: number;
    status?: number;
    tags?: string;
    imgUrl?: string;
    level?: string;
    size?: string;
    typeId?: number;
}
export interface GoodsInsertProperty {
    id?: number;
    tid?: number;
    goodsName: string;
    goodsDes?: string;
    serialNum?: string;
    partNo?: string;
    price: number;
    quantity?: number;
    tags?: string;
    safetyStock?: number;
    standardStock?: number;
    locationId?: number;
    deviceId?: string;
    status?: number;
    imgUrl?: string;
    level?: string;
    size?: string;
    typeId?: number;
}
export interface GoodsDeleteProperty {
    id?: number;
    tid?: number;
    goodsName?: string;
    goodsDes?: string;
    serialNum?: string;
    price?: number;
    partNo?: string;
    quantity?: number;
    safetyStock?: number;
    standardStock?: number;
    locationId?: number;
    status?: number;
    deviceId?: string;
    imgUrl?: string;
    tags?: string[];
    level?: string;
    size?: string;
    typeId?: number;
}
export interface Location {
    id: number;
    location: string;
    deviceId: string;
    tid: number;
    createdAt: number;
    updatedAt: number;
}
export interface LocationSelectProperty {
    id?: number;
    tid?: number;
    location?: string;
    deviceId?: string;
    isEmpty?: boolean;
    pageSize?: number;
    curPageNo?: number;
    startAt?: number;
    endAt?: number;
}
export interface LocationUpdateProperty {
    id: number;
    location?: string;
    deviceId?: string;
    tid?: number;
}
export interface LocationInsertProperty {
    id?: number;
    location: string;
    deviceId?: string;
    tid?: number;
}
export interface LocationDeleteProperty {
    id?: number;
    location?: string;
    deviceId?: string;
    tid?: number;
}
export interface Garbage {
    integral: number;
    secondary: string;
    primary: string;
    config: string;
    position: string;
    name: string;
    id: number;
    createdAt: number;
    updatedAt: number;
}
export interface GarbageSelectProperty {
    integral?: number;
    secondary?: string;
    primary?: string;
    config?: string;
    position?: string;
    name?: string;
    id?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface GarbageInsertProperty {
    integral?: number;
    secondary?: string;
    primary?: string;
    config?: string;
    position?: string;
    name?: string;
    id?: number;
    iconPath?: string;
    bgImagePath?: string;
}
export interface GarbageUpdateProperty {
    integral?: number;
    secondary?: string;
    primary?: string;
    config?: string;
    position?: string;
    name?: string;
    id: number;
    iconPath?: string;
    bgImagePath?: string;
}
export interface GarbageDeleteProperty {
    integral?: number;
    secondary?: string;
    primary?: string;
    config?: string;
    position?: string;
    name?: string;
    id: number;
}
export interface Part {
    id: number;
    deviceId: string;
    name: string;
    imageInfo: string;
    num: number;
    packageQty: number;
    package: number;
    price: number;
    desc: string;
    itemNo: string;
    batchNo: string;
    status: boolean;
    repairStatus: number;
    preInspectionStatus: number;
    type: number;
    createdAt: string;
    updatedAt: string;
}
export interface PartProperty {
    typeId?: number;
    preInspectionStatus?: number;
    repairStatus?: number;
    status?: boolean;
    batchNo?: string;
    itemNo?: string;
    desc?: string;
    num?: number;
    price?: number;
    packageQty?: number;
    package?: number;
    imageInfo?: string;
    name?: string;
    deviceId?: string;
    result?: string;
    id?: number;
    companyId?: number;
}
export interface PartSelectProperty extends PartProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface PartInsertProperty extends PartProperty {
    itemNo: string;
    desc: string;
    num: number;
}
export interface PartUpdateProperty extends PartInsertProperty {
    id: number;
}
export interface PartDeleteProperty extends PartProperty {
    id: number;
}
export declare function Gc(service: any, isDebugMode?: boolean): {
    rent: Request<Rent, RentInsertProperty, RentDeleteProperty, RentUpdateProperty, RentSelectProperty>;
    type: Request<Type, TypeInsertProperty, TypeDeleteProperty, TypeUpdateProperty, TypeSelectProperty>;
    step_price: Request<StepPrice, StepPriceInsertProperty, StepPriceDeleteProperty, StepPriceUpdateProperty, StepPriceSelectProperty>;
    shopping_cart: Request<ShoppingCart, ShoppingCartInsertProperty, ShoppingCartDeleteProperty, ShoppingCartUpdateProperty, ShoppingCartSelectProperty>;
    rfid: Request<Rfid, RfidInsertProperty, RfidDeleteProperty, RfidUpdateProperty, RfidSelectProperty>;
    goods: Request<Goods, GoodsInsertProperty, GoodsDeleteProperty, GoodsUpdateProperty, GoodsSelectProperty>;
    location: Request<Location, LocationInsertProperty, LocationDeleteProperty, LocationUpdateProperty, LocationSelectProperty>;
    garbage: Request<Garbage, GarbageInsertProperty, GarbageDeleteProperty, GarbageUpdateProperty, GarbageSelectProperty>;
    part: Request<Part, PartInsertProperty, PartDeleteProperty, PartUpdateProperty, PartSelectProperty>;
    getVersion: () => Promise<any>;
};
