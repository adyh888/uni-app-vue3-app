import { Request } from "../request";
import { Feedback } from "./ac";
import { Tool } from "./tc";
export interface LogClean {
    villageId?: number;
    totalWeight?: number;
    garbageId?: number;
    personnelId?: number;
    deviceId?: string;
    id?: number;
}
export interface LogCleanSelectProperty extends LogClean {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogCleanUpdateProperty extends LogClean {
    id: number;
}
export interface LogCleanInsertProperty extends LogClean {
    personnelId: number;
}
export interface LogCleanDeleteProperty extends LogClean {
    id: number;
}
export interface LogRent {
    isSettlement?: boolean;
    isReturn?: boolean;
    result?: number;
    duration?: number;
    companyId?: number;
    phoneNo?: string;
    goodsId?: number;
    toolId?: number;
    epc?: string;
    deviceId?: string;
    returnTime?: number;
    lendTime?: number;
    totalPrice?: number;
    type?: number;
    unionid?: string;
    uid?: number;
    id?: number;
}
export interface LogRentStepTotalPriceProperty {
    startTime: number;
    endTime: number;
    partList: any[];
}
export interface TopTenUsageTimesProperty {
    cid: number;
    dateFrom: number;
    dateTo: number;
}
export interface LogRentSelectProperty extends LogRent {
    group?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogRentUpdateProperty extends LogRent {
    id: number;
}
export interface LogRentInsertProperty extends LogRent {
    isReturn: boolean;
    lendTime: number;
}
export interface LogRentInsertBatchProperty extends LogRentInsertProperty {
    toolIds: string;
}
export interface LogRentDeleteProperty extends LogRent {
    id: number;
}
export interface LogModificationIntegral {
    desc?: string;
    groupId?: number;
    uid?: number;
    curValue?: number;
    beforeValue?: number;
    garbageId?: number;
    id?: number;
}
export interface LogModificationIntegralSelectProperty extends LogModificationIntegral {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogModificationIntegralUpdateProperty extends LogModificationIntegral {
    id: number;
}
export interface LogModificationIntegralInsertProperty extends LogModificationIntegral {
}
export interface LogModificationIntegralDeleteProperty extends LogModificationIntegral {
    id: number;
}
export interface EmailTemplate {
    remarks: string;
    mainTitle: string;
    bottomDesc: string;
    paramsCh: string;
    params: string;
    title: string;
    emailTitle: string;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface EmailTemplateProperty {
    remarks?: string;
    mainTitle?: string;
    bottomDesc?: string;
    paramsCh?: string;
    params?: string;
    title?: string;
    emailTitle?: string;
    id?: number;
}
export interface EmailTemplateSelectProperty extends EmailTemplateProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface EmailTemplateUpdateProperty extends EmailTemplateProperty {
    id: number;
}
export interface EmailTemplateInsertProperty extends EmailTemplateProperty {
    paramsCh: string;
    params: string;
    title: string;
    emailTitle: string;
}
export interface EmailTemplateDeleteProperty extends EmailTemplateProperty {
    id: number;
}
export interface SendEmailProperty {
    email: string;
    templateId: number;
    data: string[];
}
export interface LogMeasurement {
    status: string;
    companyId: number;
    receiveUid: number;
    grantTime: number;
    grantStatus: string;
    grantUid: number;
    nextMeasurementTime: number;
    measurementCycle: string;
    measurementResult: string;
    measurementTime: number;
    measurementUid: number;
    submitInspectTime: number;
    submitInspectUid: number;
    toolId: number;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface LogMeasurementProperty {
    status?: string;
    companyId?: number;
    receiveUid?: number;
    grantStatus?: string;
    grantUid?: number;
    measurementCycle?: string;
    measurementResult?: string;
    measurementUid?: number;
    submitInspectUid?: number;
    toolId?: number;
    id?: number;
}
export interface LogMeasurementSelectProperty extends LogMeasurementProperty {
    measurementTime?: number[];
    submitInspectTime?: number[];
    grantTime?: number[];
    nextMeasurementTime?: number[];
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogMeasurementUpdateProperty extends LogMeasurementProperty {
    id: number;
    measurementTime?: number;
    submitInspectTime?: number;
    grantTime?: number;
    nextMeasurementTime?: number;
}
export interface LogMeasurementInsertProperty extends LogMeasurementProperty {
    toolId: number;
    measurementTime?: number;
    submitInspectTime?: number;
    grantTime?: number;
    nextMeasurementTime?: number;
}
export interface LogMeasurementDeleteProperty extends LogMeasurementProperty {
    id: number;
    measurementTime?: number;
    submitInspectTime?: number;
    grantTime?: number;
    nextMeasurementTime?: number;
}
export interface LogScrap {
    reApprovalMark: string;
    reApprovalStatus: number;
    reApprovalTime: number;
    reApprovalUid: number;
    approvalMark: string;
    approvalStatus: number;
    approvalTime: number;
    approvalUid: number;
    sendRepairReason: string;
    sendRepairUid: number;
    itemId: number;
    toolId: number;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface LogScrapProperty {
    reApprovalMark?: string;
    reApprovalStatus?: number;
    reApprovalTime?: number;
    reApprovalUid?: number;
    approvalMark?: string;
    approvalStatus?: number;
    approvalTime?: number;
    approvalUid?: number;
    sendRepairReason?: string;
    toolCode?: string;
    sendRepairUid?: number;
    itemId?: number;
    toolId?: number;
    id?: number;
}
export interface LogScrapSelectProperty extends LogScrapProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogScrapUpdateProperty extends LogScrapProperty {
    id: number;
}
export interface LogScrapInsertProperty extends LogScrapProperty {
}
export interface LogScrapDeleteProperty extends LogScrapProperty {
    id: number;
}
export interface LogTest {
    receiveUid: number;
    grantTime: number;
    grantStatus: string;
    grantUid: number;
    measurementResult: string;
    measurementTime: number;
    measurementUid: number;
    submitInspectTime: number;
    submitInspectUid: number;
    testCycle: string;
    testerCode: string;
    testResult: string;
    testTime: number;
    testUid: number;
    itemId: number;
    toolId: number;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface LogTestProperty {
    receiveUid?: number;
    grantTime?: number;
    grantStatus?: string;
    grantUid?: number;
    measurementResult?: string;
    measurementTime?: number;
    measurementUid?: number;
    submitInspectTime?: number;
    submitInspectUid?: number;
    testCycle?: string;
    username?: string;
    toolCode?: string;
    testerCode?: string;
    testResult?: string;
    testTime?: number;
    testUid?: number;
    itemId?: number;
    toolId?: number;
    id?: number;
}
export interface LogTestSelectProperty extends LogTestProperty {
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogTestUpdateProperty extends LogTestProperty {
    id: number;
}
export interface LogTestInsertProperty extends LogTestProperty {
}
export interface LogTestDeleteProperty extends LogTestProperty {
    id: number;
}
export interface LogProcess {
    status: string;
    mark: string;
    processTypeId: number;
    processId: number;
    companyId: number;
    itemId: number;
    departmentId: number;
    teamId: number;
    uid: number;
    uid2: number;
    id: number;
    startAt?: number;
    endAt?: number;
}
export interface LogProcessProperty {
    status?: string;
    mark?: string;
    processTypeId?: number;
    processId?: number;
    itemId?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    uid?: number;
    uid2?: number;
    id?: number;
}
export interface LogProcessSelectProperty extends LogProcessProperty {
    fatherProcessName: string;
    toolCode?: string;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogProcessUpdateProperty extends LogProcessProperty {
    id: number;
}
export interface LogProcessInsertProperty extends LogProcessProperty {
    processTypeId: number;
    processId: number;
    departmentId: number;
    teamId: number;
    uid: number;
}
export interface LogProcessDeleteProperty extends LogProcessProperty {
    id: number;
}
export interface Log {
    id: number;
    uid: number;
    username: string;
    positionName: string;
    toolId: number;
    deviceId: string;
    phoneNo: string;
    drawerId: string;
    serialNum: string;
    location: string;
    partId: string;
    ifshow: boolean;
    partNo?: string;
    partDes?: string;
    itemNo: string;
    quantity: number;
    num: number;
    isPutIn: boolean;
    status: boolean;
    tid: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogSelectProperty {
    id?: number;
    companyId?: number;
    groupId?: number;
    departmentId?: number;
    teamId?: number;
    phoneNo?: string;
    positionName?: string;
    uid?: number;
    returnResultArr?: number[];
    username?: string;
    toolId?: number;
    deviceId?: string;
    selectParams?: string[];
    drawerId?: string;
    serialNum?: string;
    toolName?: string;
    toolCode?: string;
    location?: string;
    partNo?: string;
    partDes?: string;
    itemNo?: string;
    tid?: string;
    epc?: number;
    quantity?: number;
    num?: number;
    isPutIn?: boolean;
    ifshow?: boolean;
    status?: boolean;
    curPageNo?: number;
    pageSize?: number;
    createdAt?: string;
    startAt?: number;
    endAt?: number;
    isRepair?: boolean;
}
export interface LogSelectBatchProperty {
    curPageNo?: number;
    pageSize?: number;
    toolIdArr: number[];
}
export interface LogUpdateProperty {
    id: number;
    phoneNo?: string;
    uid?: number;
    username?: string;
    positionName?: string;
    toolId?: number;
    deviceId?: string;
    drawerId?: string;
    serialNum?: string;
    expectReturnTime?: number;
    location?: string;
    partNo?: string;
    partDes?: string;
    itemNo?: string;
    quantity?: number;
    num?: number;
    tid?: string;
    isPutIn?: boolean;
    status?: boolean;
}
export interface LogInsertProperty {
    id?: number;
    phoneNo?: string;
    ifshow?: boolean;
    uid: number;
    username?: string;
    positionName?: string;
    toolId?: number;
    deviceId?: string;
    drawerId?: string;
    serialNum?: string;
    expectReturnTime?: number;
    returnResult?: number;
    location?: string;
    isRepayment?: boolean;
    tid?: string;
    partNo?: string;
    partDes?: string;
    itemNo?: string;
    quantity: number;
    num?: number;
    isPutIn: boolean;
    status: boolean;
}
export interface LogDeleteProperty {
    id?: number;
    phoneNo?: string;
    positionName?: string;
    uid?: number;
    username?: string;
    toolId?: number;
    deviceId?: string;
    drawerId?: string;
    serialNum?: string;
    expectReturnTime?: number;
    location?: string;
    tid?: string;
    partNo?: string;
    partDes?: string;
    itemNo?: string;
    quantity?: number;
    num?: number;
    isPutIn?: boolean;
    status?: boolean;
}
export interface LogInsertBatchProperty {
    uid: number;
    username: string;
    toolArr: Tool[];
    isPutIn: boolean;
    expectReturnTime: number;
    toolId?: number;
    ifshow?: boolean;
    key: string;
}
export interface LogFeedback {
    id: number;
    uid: number;
    username: string;
    toolId: number;
    goodsId: number;
    itemId: number;
    phoneNo: string;
    num: number;
    tid: string;
    workorderNo: string;
    updateUser: string;
    feedbackId: number;
    status: number;
    deviceTypeId: number;
    deviceId: string;
    description: string;
    epc: string;
    deadline: Date;
    createdAt: number;
    updatedAt: number;
}
export interface LogFeedbackSelectProperty {
    id?: number;
    uid?: number;
    deviceId: string;
    deviceIdFrom?: string;
    updateUser?: string;
    username?: string;
    workorderNo?: string;
    deviceName?: string;
    toolId?: number;
    deviceTypeId?: number;
    itemId: number;
    goodsId?: number;
    goodsName?: string;
    num?: number;
    feedbackType?: string;
    feedbackName?: string;
    deadline?: number;
    status?: number;
    feedbackId?: number;
    partDes?: string;
    partNo?: string;
    curPageNo: number;
    pageSize: number;
    startAt?: number;
    endAt?: number;
    deadlineStart: number;
    deadlineEnd: number;
    phoneNo?: string;
    description?: string;
    epc?: string;
    tid?: string;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    grantUid?: number;
    receiveUid?: number;
    grantStatus?: string;
    sendRepairTime?: number[];
    repairTime?: number[];
    grantTime?: number[];
}
export interface LogFeedbackDeleteProperty {
    id?: number;
    uid?: number;
    updateUser?: string;
    username?: string;
    toolId?: number;
    itemId?: number;
    goodsId?: number;
    deviceTypeId?: number;
    phoneNo?: string;
    num?: number;
    deadline?: number;
    status?: number;
    deviceId?: string;
    workorderNo?: string;
    description?: string;
    epc?: string;
    grantUid?: number;
    receiveUid?: number;
    grantStatus?: string;
    sendRepairTime?: number;
    repairTime?: number;
    grantTime?: number;
}
export interface LogFeedbackInsertBatchProperty {
    uid?: number;
    username?: string;
    feedbackArr?: string;
    toolId?: number;
    isPutIn?: boolean;
    deadline?: Date;
}
export interface LogFeedbackInsertBatchGoodsProperty {
    uid: number;
    id?: number;
    updateUser?: string;
    status: number;
    num?: number;
    deadline: number;
    goodsArr: string[];
    feedbackIdArr: number[];
    deviceId?: string;
    description?: string;
    epc?: string;
    tid?: string;
}
export interface LogFeedbackInsertProperty {
    uid: number;
    username: string;
    itemId: number;
    toolId: number;
    feedbackId: number;
    deviceTypeId?: number;
    deadline: Date;
    status: number;
    grantUid?: number;
    receiveUid?: number;
    grantStatus?: string;
    phoneNo?: string;
    workorderNo?: string;
    sendRepairTime?: number;
    repairTime?: number;
    grantTime?: number;
}
export interface LogFeedbackDetailProperty {
    id: number;
    uid: number;
    username: string;
    status: number;
    deadline: number;
    toolId: number;
    itemId: number;
    createdAt: number;
    updatedAt: number;
    ts: number;
    updateUser: string;
    location: string;
    deviceId: string;
    num: number;
    feedbackId: number;
    tool: Tool;
    feedback: Feedback;
}
export interface LogFeedbackTableLengthProperty {
    companyId: number;
}
export interface LogFeedbackUpdateProperty extends LogFeedbackDeleteProperty {
    id?: number;
}
export interface LogAlarm {
    id: number;
    deviceId: string;
    logId: number;
    ts: number;
    type: string;
    model: string;
    workorderNo: string;
    locationId: number;
    garbageId: number;
    name: string;
    grade: string;
    class: string;
    status: boolean;
    isCheck: boolean;
    username: string;
    val1: string;
    val2: string;
    val3: string;
    info: string;
    tid: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogAlarmInsertProperty {
    id?: number;
    deviceId?: string;
    logId?: number;
    locationId?: number;
    garbageId?: number;
    ts?: number;
    type?: string;
    model?: string;
    name?: string;
    grade?: string;
    workorderNo?: string;
    alarmId?: number;
    val1?: string;
    val2?: string;
    val3?: string;
    class?: string;
    status?: boolean;
    isCheck?: boolean;
    username?: string;
    info?: string;
}
export interface LogAlarmUpdateProperty {
    id: number;
    deviceId?: string;
    logId?: number;
    alarmId?: number;
    ts?: number;
    locationId?: number;
    garbageId?: number;
    val1?: string;
    val2?: string;
    val3?: string;
    type?: string;
    workorderNo?: string;
    model?: string;
    name?: string;
    grade?: string;
    class?: string;
    status?: boolean;
    isCheck?: boolean;
    username?: string;
    info?: string;
}
export interface LogAlarmDeleteProperty {
    id?: number;
    alarmId?: number;
    val1?: string;
    val2?: string;
    val3?: string;
    deviceId?: string;
    logId?: number;
    model?: string;
    workorderNo?: string;
    ts?: number;
    type?: string;
    name?: string;
    locationId?: number;
    garbageId?: number;
    grade?: string;
    class?: string;
    status?: boolean;
    isCheck?: boolean;
    username?: string;
    info?: string;
}
export interface LogAlarmSelectProperty {
    id?: number;
    groupId?: number;
    companyId?: number;
    villageName?: string;
    workorderNo?: string;
    departmentId?: number;
    val1?: string;
    val2?: string;
    val3?: string;
    teamId?: number;
    model?: string;
    deviceId?: string;
    logId?: number;
    locationId?: number;
    garbageId?: number;
    ts?: number;
    type?: string;
    name?: string;
    grade?: string;
    class?: string;
    status?: boolean;
    isCheck?: boolean;
    username?: string;
    info?: string;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogUserLogin {
    id: number;
    deviceId: string;
    username: string;
    truename: string;
    ts: number;
    status: boolean;
    tid: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogUserLoginInsertProperty {
    id?: number;
    deviceId?: string;
    username?: string;
    truename?: string;
    ts?: number;
    status?: boolean;
    tid?: string;
}
export interface LogUserLoginUpdateProperty {
    id: number;
    deviceId?: string;
    username?: string;
    truename?: string;
    ts?: number;
    status?: boolean;
    tid?: string;
}
export interface LogUserLoginSelectProperty {
    id?: number;
    groupId?: number;
    villageName?: string;
    companyId?: number;
    departmentId?: number;
    selectParams?: string[];
    teamId?: number;
    deviceId?: string;
    username?: string;
    truename?: string;
    ts?: number;
    status?: boolean;
    tid?: string;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
    startUpdateAt?: number;
    endUpdateAt?: number;
}
export interface LogUserLoginDeleteProperty {
    id?: number;
    deviceId?: string;
    username?: string;
    truename?: string;
    ts?: number;
    status?: boolean;
    tid?: string;
}
export interface LogShelf {
    id: number;
    deviceId: string;
    toolId: number;
    goodsId: number;
    quantity: number;
    num: number;
    onShelf: number;
    location: string;
    uid: number;
    username: string;
    workorderNo: string;
    time: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogShelfSelectProperty {
    id?: number;
    type?: string;
    deviceId?: string;
    groupId?: number;
    toolId?: number;
    toolName?: string;
    goodsId?: number;
    quantity?: number;
    num?: number;
    onShelf?: number;
    uid?: number;
    username?: string;
    location?: string;
    workorderNo: string;
    time?: number;
    pageSize?: number;
    curPageNo?: number;
    startAt?: number;
    endAt?: number;
    startUpdateAt?: number;
    endUpdateAt?: number;
}
export interface LogShelfUpdateProperty {
    id: number;
    deviceId?: string;
    toolId?: number;
    goodsId?: number;
    quantity?: number;
    num?: number;
    onShelf?: number;
    location?: string;
    workorderNo: string;
    uid?: number;
    username?: string;
    time?: number;
}
export interface LogShelfInsertProperty {
    id?: number;
    deviceId?: string;
    toolId?: number;
    goodsId?: number;
    quantity?: number;
    num?: number;
    onShelf?: number;
    workorderNo?: string;
    uid?: number;
    username?: string;
    time?: number;
}
export interface LogShelfDeleteProperty {
    id?: number;
    deviceId?: string;
    toolId?: number;
    goodsId?: number;
    quantity?: number;
    num?: number;
    onShelf?: number;
    workorderNo?: string;
    location?: string;
    uid?: number;
    username?: string;
    time?: number;
}
export interface LogCharge {
    id: number;
    startTime: number;
    endTime: number;
    uid: number;
    location: string;
    chargerId: number;
    deviceId: string;
    deviceName: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogChargeInsertProperty {
    id?: number;
    startTime?: number;
    endTime?: number;
    uid: number;
    location: string;
    deviceId: string;
    chargerId?: number;
}
export interface LogChargeUpdateProperty {
    id: number;
    startTime?: number;
    endTime?: number;
    uid?: number;
    location?: string;
    deviceId?: string;
    deviceName?: string;
    chargerId?: number;
}
export interface LogChargeSelectProperty {
    id?: number;
    groupId?: number;
    companyId?: number;
    departmentId?: number;
    teamId?: number;
    startTime?: number;
    endTime?: number;
    uid?: number;
    time?: number;
    location?: string;
    deviceId?: string;
    deviceName?: string;
    chargerId?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
    startUpdateAt?: number;
    endUpdateAt?: number;
}
export interface LogChargeDeleteProperty {
    id?: number;
    startTime?: number;
    endTime?: number;
    uid?: number;
    location?: string;
    deviceId?: string;
    deviceName?: string;
    chargerId?: number;
}
export interface LogApply {
    id: number;
    type: number;
    unionid: string;
    uid: number;
    num: number;
    username: string;
    password: string;
    groupId: number;
    departmentId: number;
    companyId: number;
    teamId: number;
    roleId: number;
    deviceId: string;
    phoneNo: string;
    reason: string;
    description: string;
    status: number;
    toolId: number;
    result: number;
    createdAt: string;
    updatedAt: string;
}
export interface LogApplyDeleteProperty {
    id?: number;
    type?: number;
    unionid?: string;
    uid?: number;
    num?: number;
    username?: string;
    password?: string;
    phoneNo?: string;
    reason?: string;
    description?: string;
    groupId?: number;
    departmentId?: number;
    companyId?: number;
    teamId?: number;
    roleId?: number;
    deviceId?: string;
    toolId?: number;
    result?: number;
    status?: number;
}
export interface LogApplyInsertProperty extends LogApplyDeleteProperty {
    type: number;
    result: number;
}
export interface LogApplySelectProperty extends LogApplyDeleteProperty {
    username?: string;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogApplyUpdateProperty extends LogApplyDeleteProperty {
    result: number;
}
export interface LogLock {
    id: number;
    deviceId: string;
    username: string;
    truename: string;
    ts: number;
    location: string;
    type: string;
    workorderNo: string;
    status: boolean;
    cmd: string;
    tid: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogLockSelectProperty {
    deviceId?: string;
    username?: string;
    truename?: string;
    type?: string;
    workorderNo?: string;
    location?: string;
    ts?: number;
    status?: boolean;
    cmd?: string;
    tid?: string;
    id?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogLockInsertProperty {
    deviceId?: string;
    username?: string;
    truename?: string;
    location?: string;
    ts?: number;
    type?: string;
    workorderNo?: string;
    status?: boolean;
    cmd?: string;
    tid?: string;
}
export interface LogLockDeleteProperty {
    deviceId?: string;
    username?: string;
    truename?: string;
    location?: string;
    ts?: number;
    type?: string;
    workorderNo?: string;
    status?: boolean;
    cmd?: string;
    tid?: string;
    id?: number;
}
export interface LogLockUpdateProperty {
    deviceId?: string;
    username?: string;
    truename?: string;
    location?: string;
    workorderNo?: string;
    type?: string;
    ts?: number;
    status?: boolean;
    cmd?: string;
    tid?: string;
    id: number;
}
export interface LogEpcGoods {
    id: number;
    oldGoodsId: number;
    newGoodsId: number;
    epc: string;
    rfidId: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogEpcGoodsSelectProperty {
    id?: number;
    oldGoodsId?: number;
    newGoodsId?: number;
    epc?: string;
    rfidId?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogEpcGoodsInsertProperty {
    id?: number;
    oldGoodsId?: number;
    newGoodsId?: number;
    epc?: string;
    rfidId?: number;
}
export interface LogEpcGoodsUpdateProperty {
    id: number;
    oldGoodsId?: number;
    newGoodsId?: number;
    epc?: string;
    rfidId?: number;
}
export interface LogEpcGoodsDeleteProperty {
}
export interface LogDeviceLogin {
    id: number;
    deviceId: string;
    ip: string;
    status: number;
    ts: number;
    info: string;
    tid: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogDeviceLoginSelectProperty {
    id?: number;
    deviceId?: string;
    ip?: string;
    status?: number;
    ts?: number;
    info?: string;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogDeviceLoginInsertProperty {
    id?: number;
    deviceId?: string;
    ip?: string;
    status?: number;
    ts?: number;
    info?: string;
}
export interface LogDeviceLoginUpdateProperty {
    id: number;
    deviceId?: string;
    ip?: string;
    status?: number;
    ts?: number;
    info?: string;
}
export interface LogDeviceLoginDeleteProperty {
    id?: number;
    deviceId?: string;
    ip?: string;
    status?: number;
    ts?: number;
    info?: string;
}
export interface LogPurchaseDetails {
    id: number;
    logPurchaseId: number;
    number: number;
    price: number;
    goodsId: number;
    rfid: number;
    status: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogPurchaseDetailsSelectProperty {
    id?: number;
    logPurchaseId: number;
    goodsId?: number;
    number?: number;
    status?: number;
    price?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogPurchaseDetailsInsertProperty {
    id: number;
    logPurchaseId: number;
    goodsId?: number;
    number?: number;
    status?: number;
    price?: number;
}
export interface LogPurchaseDetailsInsertBatchProperty {
    id: number;
    logPurchaseId: number;
    goodsId?: number;
    number?: number;
    status?: number;
    price?: number;
}
export interface LogPurchaseDetailsUpdateProperty {
    id: number;
    logPurchaseId: number;
    goodsId?: number;
    number?: number;
    status?: number;
    price?: number;
}
export interface LogPurchaseDetailsDeleteProperty {
    id: number;
    logPurchaseId?: number;
    goodsId?: number;
    number?: number;
    status?: boolean;
    price?: number;
}
export interface LogDeviceTransfer {
    id: number;
    lastLocation: string;
    curLocation: string;
    lastUserName: string;
    curUserName: string;
    lastUserId: string;
    curUserId: string;
    lastCompanyId: number;
    curCompanyId: number;
    deviceId: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogDeviceTransferSelectProperty {
    id?: number;
    lastLocation?: string;
    curLocation?: string;
    lastUserName?: string;
    curUserName?: string;
    lastUserId?: string;
    curUserId?: string;
    lastCompanyId?: number;
    curCompanyId?: number;
    deviceId: string;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogDeviceTransferInsertProperty {
    id?: number;
    lastLocation?: string;
    curLocation: string;
    lastUserName?: string;
    curUserName: string;
    lastUserId?: string;
    curUserId: string;
    lastCompanyId?: number;
    curCompanyId: number;
    deviceId: string;
}
export interface LogDeviceTransferUpdateProperty {
    id: number;
    lastLocation?: string;
    curLocation?: string;
    lastUserName?: string;
    curUserName?: string;
    lastUserId?: string;
    curUserId?: string;
    lastCompanyId?: number;
    curCompanyId?: number;
    deviceId: string;
}
export interface LogDeviceTransferDeleteProperty {
    id?: number;
    lastLocation?: string;
    curLocation?: string;
    lastUserName?: string;
    curUserName?: string;
    lastUserId?: string;
    curUserId?: string;
    lastCompanyId?: number;
    curCompanyId?: number;
    deviceId: string;
}
export interface LogOverhaul {
    id: number;
    toolId: number;
    status: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogOverhaulSelectProperty {
    id?: number;
    toolId?: number;
    status?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogOverhaulInsertProperty {
    id?: number;
    toolId: number;
    status: number;
}
export interface LogOverhaulUpdateProperty {
    id: number;
    toolId?: number;
    status?: number;
}
export interface LogOverhaulDeleteProperty {
    id?: number;
    toolId?: number;
    status?: number;
}
export interface LogPurchase {
    id: number;
    deviceId: string;
    uid: number;
    number: number;
    groupId: number;
    status: number;
    totalPrice: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogPurchaseSelectProperty {
    id?: number;
    deviceId?: string;
    username?: string;
    uid?: number;
    number?: number;
    status?: number;
    groupId?: number;
    totalPrice?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogPurchaseInsertProperty {
    id?: number;
    deviceId?: string;
    goodsId?: number;
    uid?: number;
    groupId?: number;
    number?: number;
    status?: number;
    totalPrice?: number;
}
export interface LogPurchaseUpdateProperty {
    id: number;
    deviceId?: string;
    uid?: number;
    number?: number;
    groupId?: number;
    status?: number;
    totalPrice?: number;
}
export interface LogPurchaseSelectByGoodsNameProperty {
    uid?: number;
    goodsName: string;
    deviceId?: string;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogPurchaseDeleteProperty {
    id?: number;
    deviceId?: string;
    groupId?: number;
    uid?: number;
    number?: number;
    status?: number;
    totalPrice?: number;
}
export interface LogPeriodicalExamination {
    id: number;
    workorderNo: number;
    deviceId: string;
    groupId?: number;
    uid: number;
    toolId: number;
    inspectTime: string;
    status: number;
    description: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogPeriodicalExaminationSelectProperty {
    id?: number;
    uid?: number;
    toolId?: number;
    deviceId?: string;
    groupId?: number;
    status?: number;
    description?: string;
    inspectTime?: number[];
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogPeriodicalExaminationInsertProperty {
    id?: number;
    uid?: number;
    toolId: number;
    groupId?: number;
    deviceId?: string;
    status: number;
    description?: string;
    inspectTime: number;
}
export interface LogPeriodicalExaminationUpdateProperty {
    id: number;
    uid?: number;
    toolId?: number;
    deviceId?: string;
    groupId?: number;
    status?: number;
    description?: string;
    inspectTime?: number;
}
export interface LogPeriodicalExaminationDeleteProperty {
    id: number;
    uid?: number;
    toolId?: number;
    groupId?: number;
    deviceId?: string;
    status?: number;
    description?: string;
    inspectTime?: number;
}
export interface LogPatrolInspection {
    id: number;
    workorderNo: string;
    deviceId: string;
    uid: number;
    toolId: number;
    groupId?: number;
    inspectTime: string;
    status: number;
    description: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogPatrolInspectionSelectProperty {
    id?: number;
    workorderNo?: string;
    uid?: number;
    toolId?: number;
    deviceId?: string;
    groupId?: number;
    status?: number;
    description?: string;
    inspectTime?: number[];
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogPatrolInspectionInsertProperty {
    id?: number;
    workorderNo?: string;
    uid: number;
    toolId: number;
    groupId?: number;
    deviceId: string;
    status: number;
    description?: string;
    inspectTime: number;
}
export interface LogPatrolInspectionUpdateProperty {
    id: number;
    workorderNo?: string;
    uid?: number;
    toolId?: number;
    deviceId?: string;
    groupId?: number;
    status?: number;
    description?: string;
    inspectTime?: number;
}
export interface LogPatrolInspectionDeleteProperty {
    id: number;
    workorderNo?: string;
    uid?: number;
    toolId?: number;
    deviceId?: string;
    groupId?: number;
    status?: number;
    description?: string;
    inspectTime?: number;
}
export interface LogPreInspection {
    id: number;
    workorderNo: string;
    deviceId: string;
    uid: number;
    groupId?: number;
    toolId: number;
    inspectTime: string;
    status: number;
    description: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogPreInspectionSelectProperty {
    id?: number;
    workorderNo?: string;
    uid?: number;
    toolId?: number;
    deviceId?: string;
    status?: number;
    description?: string;
    groupId?: number;
    inspectTime?: number[];
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogPreInspectionInsertProperty {
    id?: number;
    workorderNo: string;
    uid?: number;
    groupId?: number;
    toolId: number;
    deviceId?: string;
    status: number;
    description?: string;
    inspectTime: number;
}
export interface LogPreInspectionUpdateProperty {
    id: number;
    workorderNo?: string;
    uid?: number;
    groupId?: number;
    toolId?: number;
    deviceId?: string;
    status?: number;
    description?: string;
    inspectTime?: number;
}
export interface LogPreInspectionDeleteProperty {
    id: number;
    workorderNo?: string;
    groupId?: number;
    uid?: number;
    toolId?: number;
    deviceId?: string;
    status?: number;
    description?: string;
    inspectTime?: number;
}
export interface LogVerification {
    id: number;
    deviceId: string;
    cabinetId: number;
    drawerId: string;
    phoneNo: string;
    verificationCode: string;
    curPageNo: number;
    pageSize: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogVerificationSelectProperty {
    id?: number;
    deviceId?: string;
    cabinetId?: number;
    drawerId?: string;
    phoneNo?: string;
    verificationCode?: string;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogVerificationInsertProperty {
    id?: number;
    deviceId: string;
    cabinetId: number;
    drawerId: string;
    phoneNo: string;
    verificationCode: string;
}
export interface LogVerificationUpdateProperty {
    id: number;
    deviceId?: string;
    cabinetId?: number;
    drawerId?: string;
    phoneNo?: string;
    verificationCode?: string;
}
export interface LogVerificationDeleteProperty {
    id?: number;
    deviceId?: string;
    cabinetId?: number;
    drawerId?: string;
    phoneNo?: string;
    verificationCode?: string;
}
export interface LogSxddFile {
    id: number;
    deviceId: string;
    uid: number;
    location: string;
    fileName: string;
    status: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogSxddFileSelectProperty {
    id?: number;
    deviceId?: string;
    uid?: number;
    location?: string;
    fileName?: string;
    status?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogSxddFileInsertProperty {
    id?: number;
    deviceId?: string;
    uid?: number;
    location?: string;
    fileName?: string;
    status?: number;
}
export interface LogSxddFileUpdateProperty {
    id: number;
    deviceId?: string;
    uid?: number;
    location?: string;
    fileName?: string;
    status?: number;
}
export interface LogSxddFileDeleteProperty {
    id?: number;
    deviceId?: string;
    uid?: number;
    location?: string;
    fileName?: string;
    status?: number;
}
export interface LogGoods {
    id: number;
    goodsName: string;
    goodsId: number;
    price: number;
    quantity: number;
    username: string;
    time: string;
    location: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogGoodsSelectProperty {
    id?: number;
    goodsName?: string;
    price?: number;
    quantity?: number;
    username?: string;
    time?: number;
    goodsId?: number;
    location?: string;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogGoodsInsertProperty {
    id?: number;
    price?: number;
    quantity?: number;
    username?: string;
    time?: number;
    goodsId?: number;
    location?: string;
}
export interface LogGoodsUpdateProperty {
    id: number;
    goodsName?: string;
    price?: number;
    quantity?: number;
    username?: string;
    time?: number;
    goodsId?: number;
    location?: string;
}
export interface LogGoodsDeleteProperty {
    id?: number;
    goodsName?: string;
    price?: number;
    quantity?: number;
    username?: string;
    time?: number;
    goodsId?: number;
    location?: string;
}
export interface LogIo {
    id: number;
    ioId: number;
    ioName: string;
    ioType: number;
    ioTypeName: string;
    deviceId: string;
    uid: number;
    username: string;
    time: string;
    value: number;
    status: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogIoSelectProperty {
    id?: number;
    ioId?: number;
    ioName?: string;
    ioType?: number;
    ioTypeName?: string;
    deviceId?: string;
    uid?: number;
    username?: string;
    time?: number;
    value?: number;
    status?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogIoInsertProperty {
    id?: number;
    ioId: number;
    deviceId: string;
    uid: number;
    time: number;
    value: number;
    status: number;
}
export interface LogIoUpdateProperty {
    id: number;
    ioId?: number;
    ioName?: string;
    ioType?: number;
    ioTypeName?: string;
    deviceId?: string;
    uid?: number;
    username?: string;
    time?: number;
    value?: number;
    status?: number;
}
export interface LogIoDeleteProperty {
    id?: number;
    ioId?: number;
    ioName?: string;
    ioType?: number;
    ioTypeName?: string;
    deviceId?: string;
    uid?: number;
    username?: string;
    time?: number;
    value?: number;
    status?: number;
}
export interface LogRfidShelf {
    id: number;
    logShelfId: number;
    tid: number;
    epc: string;
    onShelf: number;
    status: number;
    uid: number;
    username: string;
    phoneNo: string;
    time: string;
    goodsId: number;
    toolId: number;
    deviceId: string;
    createdAt: number;
    updatedAt: number;
}
export interface LogRfidShelfSelectProperty {
    id?: number;
    logShelfId?: number;
    tid?: string;
    epc?: string;
    phoneNo?: string;
    onShelf?: number;
    uid?: number;
    username?: string;
    time?: number;
    toolId?: number;
    goodsId?: number;
    deviceId?: string;
    pageSize?: number;
    curPageNo?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogRfidShelfInsertProperty {
    id?: number;
    logShelfId?: number;
    tid?: string;
    phoneNo?: string;
    epc?: string;
    onShelf?: number;
    uid?: number;
    username?: string;
    time?: number;
    toolId?: number;
    goodsId?: number;
    deviceId?: string;
}
export interface LogRfidShelfUpdateProperty {
    id: number;
    logShelfId?: number;
    tid?: string;
    phoneNo?: string;
    epc?: string;
    onShelf?: number;
    uid?: number;
    username?: string;
    time?: number;
    toolId?: number;
    goodsId?: number;
    deviceId?: string;
}
export interface LogRfidShelfDeleteProperty {
    id?: number;
    logShelfId?: number;
    tid?: string;
    epc?: string;
    phoneNo?: string;
    onShelf?: number;
    uid?: number;
    username?: string;
    time?: number;
    toolId?: number;
    goodsId?: number;
    deviceId?: string;
}
export interface LogStock {
    id: number;
    time: string;
    deviceId: string;
    toolId: number;
    status: number;
    location: string;
    quantity: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogStockSelectProperty {
    id?: number;
    time?: number;
    deviceId?: string;
    toolId?: number;
    status?: number;
    location?: string;
    quantity?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogStockInsertProperty {
    id?: number;
    time: number;
    location: string;
    quantity: number;
    deviceId: string;
    toolId?: number;
    status: number;
}
export interface LogStockUpdateProperty {
    id: number;
    time?: number;
    deviceId?: string;
    toolId?: number;
    status?: number;
    location?: string;
    quantity?: number;
}
export interface LogStockDeleteProperty {
    id?: number;
    time?: number;
    deviceId?: string;
    toolId?: number;
    status?: number;
    location?: string;
    quantity?: number;
}
export interface LogMeter {
    id: number;
    deviceId: string;
    tid: number;
    type: string;
    value: number;
    ts: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogMeterSelectProperty {
    id?: number;
    time?: number;
    deviceId?: string;
    toolId?: number;
    status?: number;
    location?: string;
    quantity?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogMeterInsertProperty {
    id?: number;
    deviceId: string;
    tid?: number;
    type: string;
    value: number;
    ts: number;
}
export interface LogMeterUpdateProperty {
}
export interface LogMeterDeleteProperty {
    id?: number;
    name?: string;
    building?: number;
    unit?: string;
    floor?: number;
    houseNumber?: number;
    user?: string;
    operator?: string;
    start?: number;
    end?: number;
}
export interface LogReceive {
    status: number;
    uid: number;
    deviceId: string;
    groupId?: number;
    workorderNo: string;
    id: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogReceiveSelectProperty {
    status?: number;
    uid?: number;
    deviceId?: string;
    workorderNo?: string;
    id?: number;
    curPageNo?: number;
    pageSize?: number;
    groupId?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogReceiveInsertProperty {
    status: number;
    uid: number;
    deviceId?: string;
    groupId?: number;
    workorderNo: string;
    id?: number;
}
export interface LogReceiveUpdateProperty {
    status?: number;
    uid?: number;
    deviceId?: string;
    groupId?: number;
    workorderNo?: string;
    id: number;
}
export interface LogReceiveDeleteProperty {
    status?: number;
    uid?: number;
    deviceId?: string;
    groupId?: number;
    workorderNo?: string;
    id: number;
}
export interface LogGarbage {
    id: number;
    deviceId: string;
    uid: number;
    type: number;
    desc: string;
    username: string;
    groupId?: number;
    totalWeight: number;
    totalIntegral: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogGarbageSelectProperty {
    totalIntegral?: number;
    totalWeight?: number;
    username?: string;
    villageName?: string;
    type?: number;
    desc?: string;
    uid?: number;
    deviceId?: string;
    groupId?: number;
    id?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogGarbageInsertProperty {
    totalIntegral?: number;
    totalWeight?: number;
    groupId?: number;
    type: number;
    desc?: string;
    username?: string;
    uid: number;
    deviceId?: string;
    id?: number;
}
export interface LogGarbageUpdateProperty {
    totalIntegral?: number;
    totalWeight?: number;
    groupId?: number;
    type?: number;
    desc?: string;
    username?: string;
    uid?: number;
    deviceId?: string;
    id: number;
}
export interface LogGarbageDeleteProperty {
    totalIntegral?: number;
    totalWeight?: number;
    groupId?: number;
    type?: number;
    desc?: string;
    username?: string;
    uid?: number;
    deviceId?: string;
    id: number;
}
export interface LogGarbageDetails {
    integral: number;
    weight: number;
    garbageId: number;
    logGarbageId: number;
    id: number;
    createdAt: number;
    updatedAt: number;
}
export interface LogGarbageDetailsSelectProperty {
    integral?: number;
    weight?: number;
    garbageId?: number;
    logGarbageId?: number;
    id?: number;
    curPageNo?: number;
    pageSize?: number;
    startAt?: number;
    endAt?: number;
}
export interface LogGarbageDetailsInsertProperty {
    integral?: number;
    weight: number;
    garbageId: number;
    logGarbageId: number;
    id?: number;
}
export interface LogGarbageDetailsUpdateProperty {
    integral?: number;
    weight?: number;
    garbageId?: number;
    logGarbageId?: number;
    id: number;
}
export interface LogGarbageDetailsDeleteProperty {
    integral?: number;
    weight?: number;
    garbageId?: number;
    logGarbageId?: number;
    id: number;
}
/**
 * 批量插入借还记录
 * @param params logInsertBatchParamType[]
 */
export interface ToolQuantity {
    toolId: number;
    quantity: number;
}
export interface logInsertBatchParamType {
    uid: number;
    toolArr: ToolQuantity[];
    isPutIn: boolean;
    ifShow: boolean;
    toolId?: any;
    quantity?: any;
}
export interface logSelectFeedbackGoodsParamType {
    "id"?: number;
    "uid"?: number;
    "deviceId"?: "string";
    "deviceIdFrom"?: "string";
    "updateUser"?: "string";
    "username"?: "string";
    "toolId"?: number;
    "goodsId"?: number;
    "goodsName"?: "string";
    "num"?: number;
    "feedbackType"?: "string";
    "feedbackName"?: "string";
    "status"?: number;
    "feedbackId"?: number;
    "partDes"?: "string";
    "curPageNo"?: number;
    "pageSize"?: number;
    "description"?: "string";
    "epc"?: "string";
    "tid"?: "string";
    "companyId"?: number;
    "departmentId"?: number;
    "teamId"?: number;
}
/**
 * 工具借还记录接口
 * @param params
 */
export interface ToolStatusChangeParamType {
    uid: number;
    deviceId: string;
    toolArr?: string[];
    partNoArr?: string[];
    isPutIn: boolean;
    rfidIdArr?: string[];
    epc?: string;
    tid?: string;
    externalUsername?: string;
    expectReturnTime?: number;
}
export declare function Lc(service: any, isDebugMode?: boolean): {
    log_clean: Request<LogClean, LogCleanInsertProperty, LogCleanDeleteProperty, LogCleanUpdateProperty, LogCleanSelectProperty>;
    log_rent: Request<LogRent, LogRentInsertProperty, LogRentDeleteProperty, LogRentUpdateProperty, LogRentSelectProperty>;
    log_modification_integral: Request<LogModificationIntegral, LogModificationIntegralInsertProperty, LogModificationIntegralDeleteProperty, LogModificationIntegralUpdateProperty, LogModificationIntegralSelectProperty>;
    email_template: Request<EmailTemplate, EmailTemplateInsertProperty, EmailTemplateDeleteProperty, EmailTemplateUpdateProperty, EmailTemplateSelectProperty>;
    log_measurement: Request<LogMeasurement, LogMeasurementInsertProperty, LogMeasurementDeleteProperty, LogMeasurementUpdateProperty, LogMeasurementSelectProperty>;
    log_scrap: Request<LogScrap, LogScrapInsertProperty, LogScrapDeleteProperty, LogScrapUpdateProperty, LogScrapSelectProperty>;
    log_test: Request<LogTest, LogTestInsertProperty, LogTestDeleteProperty, LogTestUpdateProperty, LogTestSelectProperty>;
    log_process: Request<LogProcess, LogProcessInsertProperty, LogProcessDeleteProperty, LogProcessUpdateProperty, LogProcessSelectProperty>;
    log: Request<Log, LogInsertProperty, LogDeleteProperty, LogUpdateProperty, LogSelectProperty>;
    log_feedback: Request<LogFeedback, LogFeedbackInsertProperty, LogFeedbackDeleteProperty, LogFeedbackUpdateProperty, LogFeedbackSelectProperty>;
    log_alarm: Request<LogAlarm, LogAlarmInsertProperty, LogAlarmDeleteProperty, LogAlarmUpdateProperty, LogAlarmSelectProperty>;
    log_user_login: Request<LogUserLogin, LogUserLoginInsertProperty, LogUserLoginDeleteProperty, LogUserLoginUpdateProperty, LogUserLoginSelectProperty>;
    log_shelf: Request<LogShelf, LogShelfInsertProperty, LogShelfDeleteProperty, LogShelfUpdateProperty, LogShelfSelectProperty>;
    log_charge: Request<LogCharge, LogChargeInsertProperty, LogChargeDeleteProperty, LogChargeUpdateProperty, LogChargeSelectProperty>;
    log_apply: Request<LogApply, LogApplyInsertProperty, LogApplyDeleteProperty, LogApplyUpdateProperty, LogApplySelectProperty>;
    log_lock: Request<LogLock, LogLockInsertProperty, LogLockDeleteProperty, LogLockUpdateProperty, LogLockSelectProperty>;
    log_epc_goods: Request<LogEpcGoods, LogEpcGoodsInsertProperty, LogEpcGoodsDeleteProperty, LogEpcGoodsUpdateProperty, LogEpcGoodsSelectProperty>;
    log_device_login: Request<LogDeviceLogin, LogDeviceLoginInsertProperty, LogDeviceLoginDeleteProperty, LogDeviceLoginUpdateProperty, LogDeviceLoginSelectProperty>;
    log_purchase: Request<LogPurchase, LogPurchaseInsertProperty, LogPurchaseDeleteProperty, LogPurchaseUpdateProperty, LogPurchaseSelectProperty>;
    log_purchase_details: Request<LogPurchaseDetails, LogPurchaseDetailsInsertProperty, LogPurchaseDetailsDeleteProperty, LogPurchaseDetailsUpdateProperty, LogPurchaseDetailsSelectProperty>;
    log_device_transfer: Request<LogDeviceTransfer, LogDeviceTransferInsertProperty, LogDeviceTransferDeleteProperty, LogDeviceTransferUpdateProperty, LogDeviceTransferSelectProperty>;
    log_overhaul: Request<LogOverhaul, LogOverhaulInsertProperty, LogOverhaulDeleteProperty, LogOverhaulUpdateProperty, LogOverhaulSelectProperty>;
    log_periodical_examination: Request<LogPeriodicalExamination, LogPeriodicalExaminationInsertProperty, LogPeriodicalExaminationDeleteProperty, LogPeriodicalExaminationUpdateProperty, LogPeriodicalExaminationSelectProperty>;
    log_patrol_inspection: Request<LogPatrolInspection, LogPatrolInspectionInsertProperty, LogPatrolInspectionDeleteProperty, LogPatrolInspectionUpdateProperty, LogPatrolInspectionSelectProperty>;
    log_pre_inspection: Request<LogPreInspection, LogPreInspectionInsertProperty, LogPreInspectionDeleteProperty, LogPreInspectionUpdateProperty, LogPreInspectionSelectProperty>;
    log_verification: Request<LogVerification, LogVerificationInsertProperty, LogVerificationDeleteProperty, LogVerificationUpdateProperty, LogVerificationSelectProperty>;
    log_sdxx_file: Request<LogSxddFile, LogSxddFileInsertProperty, LogSxddFileDeleteProperty, LogSxddFileUpdateProperty, LogSxddFileSelectProperty>;
    log_IO: Request<LogIo, LogIoInsertProperty, LogIoDeleteProperty, LogIoUpdateProperty, LogIoSelectProperty>;
    log_goods: Request<LogGoods, LogGoodsInsertProperty, LogGoodsDeleteProperty, LogGoodsUpdateProperty, LogGoodsSelectProperty>;
    log_rfid_shelf: Request<LogRfidShelf, LogRfidShelfInsertProperty, LogRfidShelfDeleteProperty, LogRfidShelfUpdateProperty, LogRfidShelfSelectProperty>;
    log_stock: Request<LogStock, LogStockInsertProperty, LogStockDeleteProperty, LogStockUpdateProperty, LogStockSelectProperty>;
    log_meter: Request<LogMeter, LogMeterInsertProperty, LogMeterDeleteProperty, LogMeterUpdateProperty, LogMeterSelectProperty>;
    log_receive: Request<LogReceive, LogReceiveInsertProperty, LogReceiveDeleteProperty, LogReceiveUpdateProperty, LogReceiveSelectProperty>;
    log_garbage: Request<LogGarbage, LogGarbageInsertProperty, LogGarbageDeleteProperty, LogGarbageUpdateProperty, LogGarbageSelectProperty>;
    log_garbage_details: Request<LogGarbageDetails, LogGarbageDetailsInsertProperty, LogGarbageDetailsDeleteProperty, LogGarbageDetailsUpdateProperty, LogGarbageDetailsSelectProperty>;
    getVersion: () => Promise<any>;
    /**
     * 工具借还记录接口
     * @param params
     */
    toolStatusChange: (params: ToolStatusChangeParamType) => Promise<any>;
    /**
     * 插入多条报修记录
     * @param params
     */
    logFeedbackArrInsert: (params: any) => Promise<any>;
    logRentInsertBatch: (params: LogRentInsertBatchProperty) => Promise<any>;
    logInsertBatch: (params: logInsertBatchParamType) => Promise<any>;
    logFeedbackGoods: (params: logSelectFeedbackGoodsParamType) => Promise<any>;
    sendEmail: (json: SendEmailProperty) => Promise<any>;
    getStepTotalPrice: (json: LogRentStepTotalPriceProperty) => Promise<any>;
    getTopTenUsageTimes: (json: TopTenUsageTimesProperty) => Promise<any>;
};
